

----SNAPSHOT----(22 May 2021 08:37:58) Portfolio.image priorSource: 17236690!

----End fileIn of /home/juan/ingenieria-de-software/2021-1c/17-Portfolio 1/Portfolio-Ejercicio.st----!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JPF 5/22/2021 08:41:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JPF 5/22/2021 08:41:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JPF 5/22/2021 08:41:45'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JPF 5/22/2021 08:41:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JPF 5/22/2021 08:41:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JPF 5/22/2021 08:41:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JPF 5/22/2021 08:41:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JPF 5/22/2021 08:41:45'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'JPF 5/22/2021 08:46:00' prior: 50870800!
balance

	^transactions sum: [ :aTransaction || valueToAdd |
		(aTransaction isKindOf: Deposit) ifTrue: [valueToAdd := aTransaction value].
		(aTransaction isKindOf: Withdraw ) ifTrue: [valueToAdd := 0 - aTransaction value].
		] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'JPF 5/22/2021 08:46:11' prior: 50870844!
balance

	^transactions sum: [ :aTransaction || valueToAdd |
		(aTransaction isKindOf: Deposit) ifTrue: [valueToAdd := aTransaction value].
		(aTransaction isKindOf: Withdraw ) ifTrue: [valueToAdd := 0 - aTransaction value].
		valueToAdd.
		] ifEmpty: [ 0 ]! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JPF 5/22/2021 08:46:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JPF 5/22/2021 08:46:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JPF 5/22/2021 08:46:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JPF 5/22/2021 08:46:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JPF 5/22/2021 08:46:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JPF 5/22/2021 08:46:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JPF 5/22/2021 08:46:16'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'JPF 5/22/2021 08:49:02' prior: 50870855!
balance

	"^transactions sum: [ :aTransaction | | valueToAdd |
		(aTransaction isKindOf: Deposit) ifTrue: [valueToAdd := aTransaction value].
		(aTransaction isKindOf: Withdraw ) ifTrue: [valueToAdd := 0 - aTransaction value].
		valueToAdd.
		] ifEmpty: [ 0 ]"
	
	^ transactions inject: 0 into: [:aTransaction :partialBalance | aTransaction addToBalance: partialBalance].! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'JPF 5/22/2021 08:49:15' prior: 50870893!
balance

	"^transactions sum: [ :aTransaction | | valueToAdd |
		(aTransaction isKindOf: Deposit) ifTrue: [valueToAdd := aTransaction value].
		(aTransaction isKindOf: Withdraw ) ifTrue: [valueToAdd := 0 - aTransaction value].
		valueToAdd.
		] ifEmpty: [ 0 ]"
	
	^ transactions inject: 0 into: [:aTransaction :partialBalance | aTransaction addToBalance: partialBalance].! !

----End fileIn of /home/juan/Apps/CuisUniversity/linux64/Packages/TerseGuide.pck.st----!
!Withdraw methodsFor: 'balance' stamp: 'JPF 5/22/2021 08:52:08'!
addToBalance: aBalance
	
	^ aBalance - value! !
!Deposit methodsFor: 'balance' stamp: 'JPF 5/22/2021 08:52:32'!
addToBalance: aBalance
	
	^ aBalance + value! !
!AccountTransaction methodsFor: 'balance' stamp: 'JPF 5/22/2021 08:53:18'!
addToBalance: aBalance
	
	self subclassResponsibility! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JPF 5/22/2021 08:53:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JPF 5/22/2021 08:53:24'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JPF 5/22/2021 08:53:24'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JPF 5/22/2021 08:53:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JPF 5/22/2021 08:53:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JPF 5/22/2021 08:53:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JPF 5/22/2021 08:53:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JPF 5/22/2021 08:53:34'!
ERROR!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JPF 5/22/2021 08:53:51'!
ERROR!
!ReceptiveAccount methodsFor: 'balance' stamp: 'JPF 5/22/2021 08:54:36' prior: 50870908!
balance

	"^transactions sum: [ :aTransaction | | valueToAdd |
		(aTransaction isKindOf: Deposit) ifTrue: [valueToAdd := aTransaction value].
		(aTransaction isKindOf: Withdraw ) ifTrue: [valueToAdd := 0 - aTransaction value].
		valueToAdd.
		] ifEmpty: [ 0 ]"
	
	^ transactions inject: 0 into: [:partialBalance :aTransaction | aTransaction addToBalance: partialBalance].! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JPF 5/22/2021 08:54:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JPF 5/22/2021 08:54:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JPF 5/22/2021 08:54:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JPF 5/22/2021 08:54:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JPF 5/22/2021 08:54:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JPF 5/22/2021 08:54:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JPF 5/22/2021 08:54:40'!
PASSED!

TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'JPF 5/22/2021 08:56:30'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'JPF 5/22/2021 08:57:36'!
Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 08:57:15'!
test01EmptyPortfolioHasBalance0
	
	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: 0 equals: portfolio balance.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 08:57:42'!
ERROR!
!Portfolio methodsFor: 'balance' stamp: 'JPF 5/22/2021 08:58:14'!
balance
	
	^ 0! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 08:58:18'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 09:07:18'!
test02PortfolioWithOneAccountWithBalance50HasBalance50
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addAccount: self accountWithBalance50.
	
	self assert: 50 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'test data' stamp: 'JPF 5/22/2021 09:08:32'!
accountWithBalance50

	| account |
	
	account _ ReceptiveAccount new.! !
!PortfolioTest methodsFor: 'test data' stamp: 'JPF 5/22/2021 09:09:22' prior: 50873979!
accountWithBalance50

	| account |
	
	account _ ReceptiveAccount new.
	account register: (Deposit for: 50).! !
!PortfolioTest methodsFor: 'test data' stamp: 'JPF 5/22/2021 09:12:28' prior: 50873985!
accountWithBalance50

	| account |
	
	account _ ReceptiveAccount new.
	account register: (Deposit for: 50).
	
	^ account! !

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:12:40'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/22/2021 09:13:24'!
addAccount: aReceptiveAccount 
	self shouldBeImplemented.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'JPF 5/22/2021 09:14:20'!
Object subclass: #Portfolio
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/22/2021 09:14:15' prior: 50874002!
addAccount: aReceptiveAccount

	account _ aReceptiveAccount! !

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:14:31'!
FAILURE!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:14:44'!
FAILURE!
!Portfolio methodsFor: 'balance' stamp: 'JPF 5/22/2021 09:16:09' prior: 50873964!
balance
	
	account ifNil: [ ^ 0 ] ifNotNil: [ ^ account balance ].! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 09:16:20'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:16:20'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 09:17:18'!
test03PortfolioWithTwoAccountsWithBalance50HasBalance100
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addAccount: self accountWithBalance50.
	portfolio addAccount: self accountWithBalance50.
	
	self assert: 100 equals: portfolio balance.! !

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:17:29'!
FAILURE!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'JPF 5/22/2021 09:18:08'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/22/2021 09:18:08' prior: 50874014!
addAccount: aReceptiveAccount

	accounts _ aReceptiveAccount! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/22/2021 09:18:08' prior: 50874027!
balance
	
	accounts ifNil: [ ^ 0 ] ifNotNil: [ ^ accounts balance ].! !
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/22/2021 09:18:50' prior: 50874062!
addAccount: aReceptiveAccount

	accounts add: aReceptiveAccount! !
!Portfolio methodsFor: 'initialization' stamp: 'JPF 5/22/2021 09:20:36' overrides: 16896425!
initialize

	accounts _ OrderedCollection new! !
!Portfolio methodsFor: 'balance' stamp: 'JPF 5/22/2021 09:21:36' prior: 50874067!
balance
	
	accounts sum: [:account | account balance ] ifEmpty: [ 0 ]! !
!Portfolio methodsFor: 'balance' stamp: 'JPF 5/22/2021 09:21:42' prior: 50874082!
balance
	
	^ accounts sum: [:account | account balance ] ifEmpty: [ 0 ]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 09:21:47'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:21:47'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:21:47'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 09:24:22'!
test04PortfolioWithOnePortfolioWithBalance50HasBalance50
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addPortfolio: (self portfolioWithBalance50).
	
	self assert: 50 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'test data' stamp: 'JPF 5/22/2021 09:25:51'!
portfolioWithBalance50

	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addAccount: (self accountWithBalance50).
	
	^ portfolio! !

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:26:01'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/22/2021 09:26:13'!
addPortfolio: aPortfolio 
	self shouldBeImplemented.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'JPF 5/22/2021 09:26:43'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/22/2021 09:26:41' prior: 50874123!
addPortfolio: aPortfolio 
	
	portfolio _ aPortfolio! !

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:26:48'!
FAILURE!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:27:03'!
FAILURE!
!Portfolio methodsFor: 'balance' stamp: 'JPF 5/22/2021 09:28:45' prior: 50874087!
balance
	
	^ (accounts sum: [:account | account balance ] ifEmpty: [ 0 ]) +
		(portfolio ifNil: [ 0 ] ifNotNil: portfolio balance).! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 09:28:51'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:28:51'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:28:51'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:28:51'!
ERROR!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 09:28:55'!
ERROR!
!Portfolio methodsFor: 'balance' stamp: 'JPF 5/22/2021 09:29:22' prior: 50874149!
balance
	
	^ (accounts sum: [:account | account balance ] ifEmpty: [ 0 ]) +
		(portfolio ifNil: [ 0 ] ifNotNil: [ portfolio balance ]).! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 09:29:28'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:29:28'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:29:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:29:28'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 09:30:05'!
test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addPortfolio: (self portfolioWithBalance50).
	portfolio addPortfolio: (self portfolioWithBalance50).
	
	self assert: 100 equals: portfolio balance.! !

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:30:08'!
FAILURE!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'JPF 5/22/2021 09:30:36'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/22/2021 09:30:36' prior: 50874136!
addPortfolio: aPortfolio 
	
	portfolios _ aPortfolio! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/22/2021 09:30:36' prior: 50874174!
balance
	
	^ (accounts sum: [:account | account balance ] ifEmpty: [ 0 ]) +
		(portfolios ifNil: [ 0 ] ifNotNil: [ portfolios balance ]).! !
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/22/2021 09:30:42' prior: 50874220!
addPortfolio: aPortfolio 
	
	portfolios add: aPortfolio! !
!Portfolio methodsFor: 'initialization' stamp: 'JPF 5/22/2021 09:31:02' prior: 50874077 overrides: 16896425!
initialize

	accounts _ OrderedCollection new.
	portfolios _ OrderedCollection new! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 09:31:06'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:31:06'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:31:06'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:31:06'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:31:06'!
ERROR!
!Portfolio methodsFor: 'balance' stamp: 'JPF 5/22/2021 09:31:42' prior: 50874225!
balance
	
	^ (accounts sum: [:account | account balance ] ifEmpty: [ 0 ]) +
		(portfolios sum: [:portfolio | portfolio balance ] ifEmpty: [ 0 ]).! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JPF 5/22/2021 09:31:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JPF 5/22/2021 09:31:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JPF 5/22/2021 09:31:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JPF 5/22/2021 09:31:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JPF 5/22/2021 09:31:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JPF 5/22/2021 09:31:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JPF 5/22/2021 09:31:45'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 09:31:53'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:31:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:31:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:31:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:31:53'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 09:33:10'!
test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addPortfolio: (self portfolioWithBalance50).
	portfolio addAccount: (self accountWithBalance50).
	
	self assert: 100 equals: portfolio balance.! !

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:33:18'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 09:33:18'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:33:18'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:33:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:33:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:33:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:33:18'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 09:33:52'!
test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addPortfolio: (self portfolioWithBalance50).
	portfolio addPortfolio: (self portfolioWithBalance50).
	portfolio addAccount: (self accountWithBalance50).
	portfolio addAccount: (self accountWithBalance50).
	
	self assert: 100 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 09:33:56' prior: 50874354!
test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addPortfolio: (self portfolioWithBalance50).
	portfolio addPortfolio: (self portfolioWithBalance50).
	portfolio addAccount: (self accountWithBalance50).
	portfolio addAccount: (self accountWithBalance50).
	
	self assert: 200 equals: portfolio balance.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 09:34:01'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:34:01'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:34:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:34:01'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:34:01'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:34:01'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 09:34:01'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 09:38:14' prior: 50874103!
test04PortfolioWithOnePortfolioWithBalance50HasBalance50
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addAccount: (self portfolioWithBalance50).
	
	self assert: 50 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 09:38:29' prior: 50874196!
test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addAccount: (self portfolioWithBalance50).
	portfolio addAccount: (self portfolioWithBalance50).
	
	self assert: 100 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 09:38:36' prior: 50874315!
test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addAccount: (self portfolioWithBalance50).
	portfolio addAccount: (self accountWithBalance50).
	
	self assert: 100 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 09:38:47' prior: 50874369!
test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addAccount: (self portfolioWithBalance50).
	portfolio addAccount: (self portfolioWithBalance50).
	portfolio addAccount: (self accountWithBalance50).
	portfolio addAccount: (self accountWithBalance50).
	
	self assert: 200 equals: portfolio balance.! !

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:38:57'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 09:38:59'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:38:59'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:38:59'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:38:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:38:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:38:59'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 09:38:59'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/22/2021 09:39:44'!
addAccountable: aReceptiveAccount

	accounts add: aReceptiveAccount! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'JPF 5/22/2021 09:39:44' prior: 50874445!
test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addAccountable: (self portfolioWithBalance50).
	portfolio addAccountable: (self portfolioWithBalance50).
	portfolio addAccountable: (self accountWithBalance50).
	portfolio addAccountable: (self accountWithBalance50).
	
	self assert: 200 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'JPF 5/22/2021 09:39:44' prior: 50874412!
test04PortfolioWithOnePortfolioWithBalance50HasBalance50
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addAccountable: (self portfolioWithBalance50).
	
	self assert: 50 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'JPF 5/22/2021 09:39:44' prior: 50874422!
test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addAccountable: (self portfolioWithBalance50).
	portfolio addAccountable: (self portfolioWithBalance50).
	
	self assert: 100 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'JPF 5/22/2021 09:39:44' prior: 50873970!
test02PortfolioWithOneAccountWithBalance50HasBalance50
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addAccountable: self accountWithBalance50.
	
	self assert: 50 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'JPF 5/22/2021 09:39:44' prior: 50874112!
portfolioWithBalance50

	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addAccountable: (self accountWithBalance50).
	
	^ portfolio! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'JPF 5/22/2021 09:39:44' prior: 50874039!
test03PortfolioWithTwoAccountsWithBalance50HasBalance100
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addAccountable: self accountWithBalance50.
	portfolio addAccountable: self accountWithBalance50.
	
	self assert: 100 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'JPF 5/22/2021 09:39:44' prior: 50874433!
test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addAccountable: (self portfolioWithBalance50).
	portfolio addAccountable: (self accountWithBalance50).
	
	self assert: 100 equals: portfolio balance.! !

!methodRemoval: Portfolio #addAccount: stamp: 'JPF 5/22/2021 09:39:44'!
addAccount: aReceptiveAccount

	accounts add: aReceptiveAccount!
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/22/2021 09:40:27' prior: 50874491!
addAccountable: anAccountable

	accounts add: anAccountable! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'JPF 5/22/2021 09:40:37'!
Object subclass: #Portfolio
	instanceVariableNames: 'accountables portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/22/2021 09:40:37' prior: 50874262!
balance
	
	^ (accountables sum: [:account | account balance ] ifEmpty: [ 0 ]) +
		(portfolios sum: [:portfolio | portfolio balance ] ifEmpty: [ 0 ]).! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/22/2021 09:40:37' prior: 50874238 overrides: 16896425!
initialize

	accountables _ OrderedCollection new.
	portfolios _ OrderedCollection new! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/22/2021 09:40:37' prior: 50874581!
addAccountable: anAccountable

	accountables add: anAccountable! !

!methodRemoval: Portfolio #addPortfolio: stamp: 'JPF 5/22/2021 09:40:53'!
addPortfolio: aPortfolio 
	
	portfolios add: aPortfolio!

Object subclass: #Portfolio
	instanceVariableNames: 'accountables'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'JPF 5/22/2021 09:41:02'!
Object subclass: #Portfolio
	instanceVariableNames: 'accountables'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'balance' stamp: 'JPF 5/22/2021 09:41:18' prior: 50874594!
balance
	
	^ accountables sum: [:account | account balance ] ifEmpty: [ 0 ]! !
!Portfolio methodsFor: 'balance' stamp: 'JPF 5/22/2021 09:41:34' prior: 50874630!
balance
	
	^ accountables sum: [:accountable | accountable balance ] ifEmpty: [ 0 ]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 09:41:39'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:41:39'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:41:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:41:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:41:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:41:39'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 09:41:39'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 09:44:41'!
test08EmptyPortfolioHasNotRegisteredAnyTransaction
	
	| portfolio transaction |
	
	portfolio _ Portfolio new.
	transaction _ Deposit for: 100.
	
	self deny: (portfolio hasRegistered: transaction)! !

!testRun: #PortfolioTest #test08EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'JPF 5/22/2021 09:44:52'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'JPF 5/22/2021 09:46:03'!
hasRegistered: aDeposit 
	self shouldBeImplemented.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 09:47:34'!
test08EmptyPortfolioHasNoTransactions
	
	| portfolio transaction |
	
	portfolio _ Portfolio new.
	transaction _ Deposit for: 100.
	
	self assert: {} equals: portfolio transactions! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 09:47:47' prior: 50874685!
test08EmptyPortfolioHasNoTransactions
	
	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: {} equals: portfolio transactions! !

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 09:47:52'!
ERROR!
!Portfolio methodsFor: 'transactions' stamp: 'JPF 5/22/2021 09:48:27'!
transactions
	self shouldBeImplemented.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 09:49:50' prior: 50874694!
test08EmptyPortfolioHasNoTransactions
	
	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: OrderedCollection new equals: portfolio transactions! !

!methodRemoval: PortfolioTest #test08EmptyPortfolioHasNotRegisteredAnyTransaction stamp: 'JPF 5/22/2021 09:50:02'!
test08EmptyPortfolioHasNotRegisteredAnyTransaction
	
	| portfolio transaction |
	
	portfolio _ Portfolio new.
	transaction _ Deposit for: 100.
	
	self deny: (portfolio hasRegistered: transaction)!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 09:50:08'!
ERROR!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 09:50:08'!
ERROR!
!Portfolio methodsFor: 'transactions' stamp: 'JPF 5/22/2021 09:50:35' prior: 50874704!
transactions

	^ OrderedCollection new! !

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 09:50:37'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 09:50:38'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 09:50:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:50:38'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:50:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:50:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:50:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:50:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 09:50:38'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 09:50:38'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 09:52:09' prior: 50874708!
test08EmptyPortfolioHasNoTransactions
	
	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: portfolio transactions isEmpty! !

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 09:52:10'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 09:52:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:52:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:52:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 09:52:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:52:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 09:52:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 09:52:10'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 09:52:10'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 09:54:56'!
test09PortfolioWithOneAccountableWithOneTransactionHasOneTransaction
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addAccountable: self accountWithBalance50.
	
	self assert: 50 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 09:56:02'!
test09PortfolioWithOneAccountableWithOneTransactionHasOnlyThatTransaction
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addAccountable: self accountWithBalance50.
	
	self assert: 50 equals: portfolio balance.! !

!methodRemoval: PortfolioTest #test09PortfolioWithOneAccountableWithOneTransactionHasOneTransaction stamp: 'JPF 5/22/2021 09:56:02'!
test09PortfolioWithOneAccountableWithOneTransactionHasOneTransaction
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addAccountable: self accountWithBalance50.
	
	self assert: 50 equals: portfolio balance.!
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:00:21'!
test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction
	
	| portfolio transaction account |
	
	portfolio _ Portfolio new.
	transaction _ self a50Deposit.
	account _ self accountWith: transaction.
	
	portfolio addAccountable: account.
	
	self assert: 50 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'test data' stamp: 'JPF 5/22/2021 10:00:57'!
a50Deposit

	^ Deposit for: 50! !
!PortfolioTest methodsFor: 'test data' stamp: 'JPF 5/22/2021 10:02:05'!
accountWith: transactions

	| account |
	
	account _ ReceptiveAccount new.
	transactions do: [ :aTransaction | account register: aTransaction ].
	
	^ account! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:02:34' prior: 50874845!
test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction
	
	| portfolio transaction account |
	
	portfolio _ Portfolio new.
	transaction _ self a50Deposit.
	account _ self accountWith: { transaction }.
	
	portfolio addAccountable: account.
	
	self assert: 50 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:03:00' prior: 50874869!
test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction
	
	| portfolio transaction account expectedTransactions |
	
	portfolio _ Portfolio new.
	transaction _ self a50Deposit.
	account _ self accountWith: { transaction }.
	
	portfolio addAccountable: account.
	
	self assert: 50 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:04:02' prior: 50874882!
test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction
	
	| portfolio transaction account expectedTransactions |
	
	portfolio _ Portfolio new.
	transaction _ self a50Deposit.
	account _ self accountWith: { transaction }.
	portfolio addAccountable: account.
	
	expectedTransactions _ OrderedCollection new.
	expectedTransactions add: transaction.
	
	self assert: expectedTransactions equals: portfolio transactions.! !

!methodRemoval: PortfolioTest #test09PortfolioWithOneAccountableWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 10:04:18'!
test09PortfolioWithOneAccountableWithOneTransactionHasOnlyThatTransaction
	
	| portfolio |
	
	portfolio _ Portfolio new.
	portfolio addAccountable: self accountWithBalance50.
	
	self assert: 50 equals: portfolio balance.!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 10:04:21'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 10:04:21'!
FAILURE!
!Portfolio methodsFor: 'transactions' stamp: 'JPF 5/22/2021 10:08:53' prior: 50874732!
transactions

	accountables ifEmpty: [ ^ OrderedCollection new ]
		ifNotEmpty: [ ^ accountables first transactions ].! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 10:08:59'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 10:08:59'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:08:59'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 10:08:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:08:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:08:59'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 10:08:59'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 10:08:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 10:08:59'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:09:46'!
test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions
	
	| portfolio transaction account expectedTransactions |
	
	portfolio _ Portfolio new.
	transaction _ self a50Deposit.
	account _ self accountWith: { transaction }.
	portfolio addAccountable: account.
	
	expectedTransactions _ OrderedCollection new.
	expectedTransactions add: transaction.
	
	self assert: expectedTransactions equals: portfolio transactions.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:09:58' prior: 50874974!
test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions
	
	| portfolio transaction account1 expectedTransactions |
	
	portfolio _ Portfolio new.
	transaction _ self a50Deposit.
	account1 _ self accountWith: { transaction }.
	portfolio addAccountable: account1.
	
	expectedTransactions _ OrderedCollection new.
	expectedTransactions add: transaction.
	
	self assert: expectedTransactions equals: portfolio transactions.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:10:19' prior: 50874991!
test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions
	
	| portfolio transaction account1 account2 expectedTransactions |
	
	portfolio _ Portfolio new.
	transaction _ self a50Deposit.
	account1 _ self accountWith: { transaction }.
	portfolio addAccountable: account1.
	
	expectedTransactions _ OrderedCollection new.
	expectedTransactions add: transaction.
	
	self assert: expectedTransactions equals: portfolio transactions.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:10:27' prior: 50875008!
test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions
	
	| portfolio transaction1 account1 account2 expectedTransactions |
	
	portfolio _ Portfolio new.
	transaction1 _ self a50Deposit.
	account1 _ self accountWith: { transaction1 }.
	portfolio addAccountable: account1.
	
	expectedTransactions _ OrderedCollection new.
	expectedTransactions add: transaction1.
	
	self assert: expectedTransactions equals: portfolio transactions.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:10:38' prior: 50875025!
test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions
	
	| portfolio transaction1 transaction2 account1 account2 expectedTransactions |
	
	portfolio _ Portfolio new.
	transaction1 _ self a50Deposit.
	account1 _ self accountWith: { transaction1 }.
	portfolio addAccountable: account1.
	
	expectedTransactions _ OrderedCollection new.
	expectedTransactions add: transaction1.
	
	self assert: expectedTransactions equals: portfolio transactions.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:11:15' prior: 50875042!
test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions
	
	| portfolio transaction1 transaction2 account1 account2 expectedTransactions |
	
	portfolio _ Portfolio new.
	
	transaction1 _ self a50Deposit.
	account1 _ self accountWith: { transaction1 }.
	
	transaction2 _ self a50Deposit.
	account2 _ self accountWith: { transaction2 }.
	
	portfolio addAccountable: account1.
	
	expectedTransactions _ OrderedCollection new.
	expectedTransactions add: transaction1.
	
	self assert: expectedTransactions equals: portfolio transactions.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:11:36' prior: 50875060!
test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions
	
	| portfolio transaction1 transaction2 account1 account2 expectedTransactions |
	
	portfolio _ Portfolio new.
	
	transaction1 _ self a50Deposit.
	account1 _ self accountWith: { transaction1 }.
	
	transaction2 _ self a50Deposit.
	account2 _ self accountWith: { transaction2 }.
	
	portfolio addAccountable: account1.
	portfolio addAccountable: account2.
	
	expectedTransactions _ OrderedCollection new.
	expectedTransactions add: transaction1.
	expectedTransactions add: transaction2.
	
	self assert: expectedTransactions equals: portfolio transactions.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:13:16' prior: 50875080!
test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions
	
	| portfolio transaction1 transaction2 account1 account2 |
	
	portfolio _ Portfolio new.
	
	transaction1 _ self a50Deposit.
	account1 _ self accountWith: { transaction1 }.
	
	transaction2 _ self a50Deposit.
	account2 _ self accountWith: { transaction2 }.
	
	portfolio addAccountable: account1.
	portfolio addAccountable: account2.
	
	self assert: 2 equals: portfolio transactions size.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:13:49' prior: 50875103!
test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions
	
	| portfolio transaction1 transaction2 account1 account2 |
	
	portfolio _ Portfolio new.
	
	transaction1 _ self a50Deposit.
	account1 _ self accountWith: { transaction1 }.
	
	transaction2 _ self a50Deposit.
	account2 _ self accountWith: { transaction2 }.
	
	portfolio addAccountable: account1.
	portfolio addAccountable: account2.
	
	self assert: 2 equals: portfolio transactions size.
	self assert: (portfolio transactions includes: transaction1).! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:14:05' prior: 50875121!
test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions
	
	| portfolio transaction1 transaction2 account1 account2 |
	
	portfolio _ Portfolio new.
	
	transaction1 _ self a50Deposit.
	account1 _ self accountWith: { transaction1 }.
	
	transaction2 _ self a50Deposit.
	account2 _ self accountWith: { transaction2 }.
	
	portfolio addAccountable: account1.
	portfolio addAccountable: account2.
	
	self assert: 2 equals: portfolio transactions size.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).! !

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 10:14:18'!
FAILURE!
!Portfolio methodsFor: 'transactions' stamp: 'JPF 5/22/2021 10:17:41' prior: 50874932!
transactions

	accountables ifEmpty: [ ^ OrderedCollection new ]
		ifNotEmpty: [ ^ accountables first transactions ].
		
	^ accountables inject: OrderedCollection new into: [ :transactions :accountable | transactions addAll: accountable transactions ].! !
!Portfolio methodsFor: 'transactions' stamp: 'JPF 5/22/2021 10:18:05' prior: 50875167!
transactions

	^ accountables inject: OrderedCollection new
		into: [ :transactions :accountable |
			transactions addAll: accountable transactions ].! !

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 10:18:13'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 10:19:10'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 10:19:10'!
FAILURE!

collection _ OrderedCollection new.!

collection2 _ OrderedCollection new.!

collection add: 1!

collection2 _ OrderedCollection new.!

collection2 add: 2!

collection2 add: 3!

collection2!

collection!

collection addAll: collection2!

collection!
!ReceptiveAccount methodsFor: 'balance' stamp: 'JPF 5/22/2021 10:23:29' prior: 50873894!
balance

	^ transactions inject: 0 into: [:partialBalance :aTransaction | aTransaction addToBalance: partialBalance].! !
!Portfolio methodsFor: 'transactions' stamp: 'JPF 5/22/2021 10:24:43' prior: 50875178!
transactions

	^ accountables inject: OrderedCollection new
		into: [ :transactions :accountable |
			transactions addAll: accountable transactions.
			transactions. ].! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 10:24:51'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 10:24:51'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:24:51'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 10:24:51'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:24:51'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:24:51'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 10:24:51'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 10:24:51'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 10:24:51'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 10:24:51'!
PASSED!
!Portfolio methodsFor: 'transactions' stamp: 'JPF 5/22/2021 10:25:31' prior: 50875214!
transactions

	^ accountables inject: OrderedCollection new
		into: [ :transactions :accountable |
			transactions addAll: accountable transactions.
			transactions. ]! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:27:10'!
test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions
	
	| portfolio transaction1 transaction2 account1 account2 |
	
	portfolio _ Portfolio new.
	
	transaction1 _ self a50Deposit.
	account1 _ self accountWith: { transaction1 }.
	
	transaction2 _ self a50Deposit.
	account2 _ self accountWith: { transaction2 }.
	
	portfolio addAccountable: account1.
	portfolio addAccountable: account2.
	
	self assert: 2 equals: portfolio transactions size.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:27:49' prior: 50874895!
test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction
	
	| portfolio transaction account |
	
	portfolio _ Portfolio new.
	transaction _ self a50Deposit.
	account _ self accountWith: { transaction }.
	portfolio addAccountable: account.
	
	self assert: 1 equals: portfolio transactions size.
	self assert: (portfolio transactions includes: transaction).
	! !

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 10:27:50'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 10:27:50'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 10:27:50'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:27:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 10:27:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:27:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:27:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 10:27:50'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 10:27:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 10:27:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 10:27:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 10:27:50'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:28:24' prior: 50875270!
test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions
	
	| portfolio portfolio1 portfolio2 transaction1 transaction2 account1 account2 |
	
	portfolio _ Portfolio new.
	
	transaction1 _ self a50Deposit.
	account1 _ self accountWith: { transaction1 }.
	
	transaction2 _ self a50Deposit.
	account2 _ self accountWith: { transaction2 }.
	
	portfolio addAccountable: account1.
	portfolio addAccountable: account2.
	
	self assert: 2 equals: portfolio transactions size.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:29:02' prior: 50875355!
test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions
	
	| portfolio portfolio1 portfolio2 transaction1 transaction2 account1 account2 |
	
	portfolio _ Portfolio new.
	
	transaction1 _ self a50Deposit.
	account1 _ self accountWith: { transaction1 }.
	portfolio _ self portfolioWith: { account1 }.
	
	transaction2 _ self a50Deposit.
	account2 _ self accountWith: { transaction2 }.
	
	portfolio addAccountable: account1.
	portfolio addAccountable: account2.
	
	self assert: 2 equals: portfolio transactions size.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:32:34' prior: 50875377!
test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions
	
	| portfolio portfolio1 portfolio2 
		transaction1 transaction2 transaction3 transaction4
		account1 account2 |
	
	portfolio _ Portfolio new.
	
	transaction1 _ self a50Deposit.
	transaction2 _ self a50Withdraw.
	account1 _ self accountWith: { transaction1 transaction2}.
	portfolio1 _ self portfolioWith: { account1 }.
	
	transaction3 _ self a50Deposit.
	transaction4 _ self a50Withdraw.
	account2 _ self accountWith: { transaction3 transaction4}.
	portfolio2 _ self portfolioWith: { account2 }.
	
	portfolio addAccountable: portfolio1.
	portfolio addAccountable: portfolio2.
	
	self assert: 4 equals: portfolio transactions size.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	self assert: (portfolio transactions includes: transaction3).
	self assert: (portfolio transactions includes: transaction4).! !
!PortfolioTest methodsFor: 'test data' stamp: 'JPF 5/22/2021 10:32:54'!
portfolioWith: transactions

	| account |
	
	account _ ReceptiveAccount new.
	transactions do: [ :aTransaction | account register: aTransaction ].
	
	^ account! !
!PortfolioTest methodsFor: 'test data' stamp: 'JPF 5/22/2021 10:33:00' prior: 50875434!
portfolioWith: transactions

	| portfolio |
	
	portfolio _ ReceptiveAccount new.
	transactions do: [ :aTransaction | portfolio register: aTransaction ].
	
	^ portfolio! !
!PortfolioTest methodsFor: 'test data' stamp: 'JPF 5/22/2021 10:33:15' prior: 50875442!
portfolioWith: transactions

	| portfolio |
	
	portfolio _ Portfolio new.
	transactions do: [ :aTransaction | portfolio register: aTransaction ].
	
	^ portfolio! !
!PortfolioTest methodsFor: 'test data' stamp: 'JPF 5/22/2021 10:33:19' prior: 50875451!
portfolioWith: accounts

	| portfolio |
	
	portfolio _ Portfolio new.
	accounts do: [ :aTransaction | portfolio register: aTransaction ].
	
	^ portfolio! !
!PortfolioTest methodsFor: 'test data' stamp: 'JPF 5/22/2021 10:33:39' prior: 50875459!
portfolioWith: accounts

	| portfolio |
	
	portfolio _ Portfolio new.
	accounts do: [ :anAccount | portfolio addAccountable: anAccount ].
	
	^ portfolio! !
!PortfolioTest methodsFor: 'test data' stamp: 'JPF 5/22/2021 10:34:00'!
a50Withdraw

	^ Withdraw for: 50! !

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 10:34:42'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 10:34:42'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:35:19' prior: 50875401!
test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions
	
	| portfolio portfolio1 portfolio2 
		transaction1 transaction2 transaction3 transaction4
		account1 account2 |
	
	portfolio _ Portfolio new.
	
	transaction1 _ self a50Deposit.
	transaction2 _ self a50Withdraw.
	account1 _ self accountWith: { transaction1. transaction2}.
	portfolio1 _ self portfolioWith: { account1 }.
	
	transaction3 _ self a50Deposit.
	transaction4 _ self a50Withdraw.
	account2 _ self accountWith: { transaction3. transaction4}.
	portfolio2 _ self portfolioWith: { account2 }.
	
	portfolio addAccountable: portfolio1.
	portfolio addAccountable: portfolio2.
	
	self assert: 4 equals: portfolio transactions size.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	self assert: (portfolio transactions includes: transaction3).
	self assert: (portfolio transactions includes: transaction4).! !

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 10:35:24'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 10:35:24'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 10:35:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:35:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 10:35:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:35:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:35:24'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 10:35:24'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 10:35:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 10:35:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 10:35:24'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 10:35:24'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:37:49'!
test12EmptyPortfolioHasNotRegisteredAnyTransactions
	
	| portfolio |
	
	portfolio _ Portfolio new.
	
	self deny: (portfolio hasRegistered: self a50Deposit).! !

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 10:37:57'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'JPF 5/22/2021 10:38:21' prior: 50874681!
hasRegistered: aDeposit
	
	^ false! !

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 10:38:22'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 10:38:22'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 10:38:22'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:38:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 10:38:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:38:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:38:22'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 10:38:22'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 10:38:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 10:38:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 10:38:22'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 10:38:22'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 10:38:22'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:40:30'!
test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction
	
	| portfolio transaction account |
	
	portfolio _ Portfolio new.
	transaction _ self a50Deposit.
	account _ self accountWith: { transaction }.
	portfolio addAccountable: account.
	
	self assert: (portfolio hasRegistered: transaction).
	! !

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 10:40:33'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 10:40:33'!
FAILURE!
!Portfolio methodsFor: 'testing' stamp: 'JPF 5/22/2021 10:41:41' prior: 50875582!
hasRegistered: aDeposit
	
	^ accountables ifEmpty: [ ^ false ] ifNotEmpty: [ ^ accountables first hasRegistered: aDeposit ]! !
!Portfolio methodsFor: 'testing' stamp: 'JPF 5/22/2021 10:41:50' prior: 50875659!
hasRegistered: aTransaction
	
	^ accountables ifEmpty: [ ^ false ] ifNotEmpty: [ ^ accountables first hasRegistered: aTransaction ]! !

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 10:41:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 10:41:55'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:43:04'!
test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions
	
	| portfolio portfolio1 portfolio2 
		transaction1 transaction2 transaction3 transaction4
		account1 account2 |
	
	portfolio _ Portfolio new.
	
	transaction1 _ self a50Deposit.
	transaction2 _ self a50Withdraw.
	account1 _ self accountWith: { transaction1. transaction2}.
	portfolio1 _ self portfolioWith: { account1 }.
	
	transaction3 _ self a50Deposit.
	transaction4 _ self a50Withdraw.
	account2 _ self accountWith: { transaction3. transaction4}.
	portfolio2 _ self portfolioWith: { account2 }.
	
	portfolio addAccountable: portfolio1.
	portfolio addAccountable: portfolio2.
	
	self assert: 4 equals: portfolio transactions size.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	self assert: (portfolio transactions includes: transaction3).
	self assert: (portfolio transactions includes: transaction4).! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 10:43:43' prior: 50875682!
test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions
	
	| portfolio portfolio1 portfolio2 
		transaction1 transaction2 transaction3 transaction4
		account1 account2 |
	
	portfolio _ Portfolio new.
	
	transaction1 _ self a50Deposit.
	transaction2 _ self a50Withdraw.
	account1 _ self accountWith: { transaction1. transaction2}.
	portfolio1 _ self portfolioWith: { account1 }.
	
	transaction3 _ self a50Deposit.
	transaction4 _ self a50Withdraw.
	account2 _ self accountWith: { transaction3. transaction4}.
	portfolio2 _ self portfolioWith: { account2 }.
	
	portfolio addAccountable: portfolio1.
	portfolio addAccountable: portfolio2.
	
	self assert: (portfolio hasRegistered: transaction1).
	self assert: (portfolio hasRegistered: transaction2).
	self assert: (portfolio hasRegistered: transaction3).
	self assert: (portfolio hasRegistered: transaction4).! !

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 10:43:48'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 10:43:48'!
FAILURE!
!Portfolio methodsFor: 'testing' stamp: 'JPF 5/22/2021 10:44:48' prior: 50875666!
hasRegistered: aTransaction
	
	"^ accountables ifEmpty: [ ^ false ] ifNotEmpty: [ ^ accountables first hasRegistered: aTransaction ]"
	^ accountables inject: false
		into: [ :transactions :accountable |
			transactions addAll: accountable transactions.
			transactions. ]! !
!Portfolio methodsFor: 'testing' stamp: 'JPF 5/22/2021 10:47:03' prior: 50875756!
hasRegistered: aTransaction
	
	accountables do: [ :accountable | (accountable hasRegistered: aTransaction) ifTrue: [ ^ true ] ].
	^ false.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 10:47:11'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 10:47:11'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:47:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 10:47:11'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:47:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:47:11'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 10:47:11'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 10:47:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 10:47:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 10:47:11'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 10:47:11'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 10:47:11'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 10:47:11'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 10:47:11'!
PASSED!
!Portfolio methodsFor: 'initialization' stamp: 'JPF 5/22/2021 10:48:15' prior: 50874603 overrides: 16896425!
initialize

	accountables _ OrderedCollection new! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 10:48:22'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 10:48:22'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:48:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 10:48:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:48:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:48:22'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 10:48:22'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 10:48:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 10:48:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 10:48:22'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 10:48:22'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 10:48:22'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 10:48:22'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 10:48:22'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'JPF 5/22/2021 10:49:36' prior: 50875768!
hasRegistered: aTransaction
	
	^ accountables anySatisfy: [ :accountable | accountable hasRegistered: aTransaction].! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 10:49:44'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 10:49:44'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:49:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 10:49:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:49:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:49:44'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 10:49:44'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 10:49:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 10:49:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 10:49:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 10:49:44'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 10:49:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 10:49:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 10:49:44'!
PASSED!

Object subclass: #Accountable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Accountable category: 'Portfolio-Ejercicio' stamp: 'JPF 5/22/2021 10:56:03'!
Object subclass: #Accountable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Accountable subclass: #Portfolio
	instanceVariableNames: 'accountables'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'JPF 5/22/2021 10:56:39'!
Accountable subclass: #Portfolio
	instanceVariableNames: 'accountables'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Accountable subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'JPF 5/22/2021 10:56:54'!
Accountable subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Accountable methodsFor: 'transactions' stamp: 'JPF 5/22/2021 10:58:08'!
transactions
	
	self subclassResponsibility! !
!Accountable methodsFor: 'balance' stamp: 'JPF 5/22/2021 10:58:20'!
balance
	
	self subclassResponsibility! !
!Accountable methodsFor: 'testing' stamp: 'JPF 5/22/2021 10:58:36'!
hasRegistered: aTransaction
	
	self subclassResponsibility! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 10:58:43'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 10:58:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:58:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 10:58:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:58:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 10:58:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 10:58:43'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 10:58:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 10:58:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 10:58:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 10:58:43'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 10:58:43'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 10:58:43'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 10:58:43'!
PASSED!
!Portfolio methodsFor: 'transactions' stamp: 'JPF 5/22/2021 11:08:48'!
addTransactionsTo: incomeTransactions

	^ accountables inject: OrderedCollection new
		into: [ :transactions :accountable |
			transactions addAll: accountable transactions.
			transactions. ]! !
!Portfolio methodsFor: 'transactions' stamp: 'JPF 5/22/2021 11:11:08' prior: 50876067!
addTransactionsTo: incomeTransactions

	^ accountables inject: incomeTransactions
		into: [ :transactions :accountable |
			transactions addAll: accountable transactions.
			transactions. ]! !
!Portfolio methodsFor: 'transactions' stamp: 'JPF 5/22/2021 11:12:50' prior: 50876076!
addTransactionsTo: incomeTransactions

	^ accountables do: [:accountable |
			accountable addTransactionsTo:incomeTransactions. ]! !
!Portfolio methodsFor: 'transactions' stamp: 'JPF 5/22/2021 11:12:53' prior: 50876085!
addTransactionsTo: incomeTransactions

	^ accountables do: [:accountable |
			accountable addTransactionsTo: incomeTransactions. ]! !
!Portfolio methodsFor: 'transactions' stamp: 'JPF 5/22/2021 11:13:03' prior: 50876092!
addTransactionsTo: incomeTransactions

	^ accountables do: [ :accountable | 			accountable addTransactionsTo: incomeTransactions. ]! !
!Portfolio methodsFor: 'transactions' stamp: 'JPF 5/22/2021 11:13:07' prior: 50876099!
addTransactionsTo: incomeTransactions

	^ accountables do: [ :accountable | 			accountable addTransactionsTo: incomeTransactions ]! !
!Portfolio methodsFor: 'transactions' stamp: 'JPF 5/22/2021 11:14:44' prior: 50875262 overrides: 50875997!
transactions

	"^ accountables inject: OrderedCollection new
		into: [ :transactions :accountable |
			transactions addAll: accountable transactions.
			transactions. ]"
		
	^ accountables inject: OrderedCollection new
		into: [ :transactions :accountable |
			accountable addTransactionsTo: transactions.
			transactions. ]! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'JPF 5/22/2021 11:16:29'!
addTransactionsTo: incomeTransactions

	^ incomeTransactions addAll: self transactions.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 11:18:34'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 11:18:34'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:18:34'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 11:18:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:18:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:18:34'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 11:18:34'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 11:18:34'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 11:18:34'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 11:18:34'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 11:18:34'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 11:18:34'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 11:18:34'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 11:18:34'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 11:18:40'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 11:18:43'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 11:18:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:18:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 11:18:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:18:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:18:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 11:18:43'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 11:18:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 11:18:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 11:18:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 11:18:43'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 11:18:43'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 11:18:43'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 11:18:43'!
PASSED!
!Accountable methodsFor: 'transactions' stamp: 'JPF 5/22/2021 11:19:28'!
addTransactionsTo: incomeTransactions

	self subclassResponsibility! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 11:19:32'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 11:19:32'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:19:32'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 11:19:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:19:32'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:19:32'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 11:19:32'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 11:19:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 11:19:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 11:19:32'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 11:19:32'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 11:19:32'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 11:19:32'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 11:19:32'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 11:22:19'!
test15ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio
	
	| portfolio |
	
	portfolio _ Portfolio new.
	
	self assert: 0 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 11:23:09' prior: 50876314!
test15ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio
	
	| portfolio account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50 .! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 11:23:26' prior: 50876322!
test15ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio
	
	| portfolio account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	
	! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 11:28:13' prior: 50876330!
test15ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio
	
	| portfolio account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	
	self 
		should: [ portfolio addAccountable: account.
			portfolio addAccountable: account ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.
	
	! !
!Portfolio class methodsFor: 'error descriptions' stamp: 'JPF 5/22/2021 11:29:52'!
cantHaveRepeatedAccountsErrorDescription

	^ 'a portfolio can not have reapeted accounts'! !

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio stamp: 'JPF 5/22/2021 11:30:11'!
FAILURE!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio stamp: 'JPF 5/22/2021 11:30:11'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/22/2021 11:32:30' prior: 50874609!
addAccountable: anAccountable

	(accountables includes: anAccountable) ifTrue: [self error: self class cantHaveRepeatedAccountsErrorDescription ].
	accountables add: anAccountable! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 11:39:07' prior: 50876338!
test15ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio
	
	| portfolio account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	
	self 
		should: [ portfolio addAccountable: account.
			portfolio addAccountable: account ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio stamp: 'JPF 5/22/2021 11:39:17'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 11:39:17'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 11:39:17'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:39:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 11:39:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:39:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:39:17'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 11:39:17'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 11:39:17'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 11:39:17'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 11:39:17'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 11:39:17'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 11:39:17'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 11:39:17'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 11:39:17'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio stamp: 'JPF 5/22/2021 11:39:17'!
PASSED!
!Portfolio methodsFor: 'transactions' stamp: 'JPF 5/22/2021 11:39:31' prior: 50876114 overrides: 50875997!
transactions

	^ accountables inject: OrderedCollection new
		into: [ :transactions :accountable |
			accountable addTransactionsTo: transactions.
			transactions. ]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 11:39:36'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 11:39:36'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:39:36'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 11:39:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:39:36'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:39:36'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 11:39:36'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 11:39:36'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 11:39:36'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 11:39:36'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 11:39:36'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 11:39:36'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 11:39:36'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 11:39:36'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio stamp: 'JPF 5/22/2021 11:39:36'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 11:39:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 11:39:38'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:39:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 11:39:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:39:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:39:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 11:39:38'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 11:39:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 11:39:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 11:39:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 11:39:38'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 11:39:38'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 11:39:38'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 11:39:38'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio stamp: 'JPF 5/22/2021 11:39:38'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/22/2021 11:40:45'!
assertPortfolioDoesNotHave: anAccountable

	^ (accountables includes: anAccountable) ifTrue: [self error: self class cantHaveRepeatedAccountsErrorDescription ]! !
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/22/2021 11:40:45' prior: 50876366!
addAccountable: anAccountable

	self assertPortfolioDoesNotHave: anAccountable.
	accountables add: anAccountable! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 11:41:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 11:41:03'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:41:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 11:41:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:41:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:41:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 11:41:03'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 11:41:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 11:41:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 11:41:03'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 11:41:03'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 11:41:03'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 11:41:03'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 11:41:03'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio stamp: 'JPF 5/22/2021 11:41:03'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 11:44:48'!
test15ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPorfolio

	| portfolio account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	
	self 
		should: [ portfolio addAccountable: account.
			portfolio addAccountable: account ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !
!PortfolioTest methodsFor: 'tests' stamp: 'JPF 5/22/2021 11:45:10'!
test16ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio
	
	| portfolio account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	
	self 
		should: [ portfolio addAccountable: account.
			portfolio addAccountable: account ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!methodRemoval: PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio stamp: 'JPF 5/22/2021 11:45:10'!
test15ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio
	
	| portfolio account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	
	self 
		should: [ portfolio addAccountable: account.
			portfolio addAccountable: account ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/22/2021 11:47:50'!
test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPorfolio

	| portfolio account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	
	self 
		should: [ portfolio addAccountable: account.
			portfolio addAccountable: account ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!methodRemoval: PortfolioTest #test15ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPorfolio stamp: 'JPF 5/22/2021 11:47:50'!
test15ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPorfolio

	| portfolio account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	
	self 
		should: [ portfolio addAccountable: account.
			portfolio addAccountable: account ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/22/2021 11:48:00'!
test15ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio
	
	| portfolio account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	
	self 
		should: [ portfolio addAccountable: account.
			portfolio addAccountable: account ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!methodRemoval: PortfolioTest #test16ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio stamp: 'JPF 5/22/2021 11:48:00'!
test16ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio
	
	| portfolio account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	
	self 
		should: [ portfolio addAccountable: account.
			portfolio addAccountable: account ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/22/2021 11:49:45' prior: 50876701!
test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPorfolio

	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: account.
	
	self 
		should: [ portfolio addAccountable: account.
			portfolio addAccountable: account ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/22/2021 11:49:57' prior: 50876759!
test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPorfolio

	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: account.
	
	self 
		should: [ portfolio addAccountable: account ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/22/2021 11:50:20' prior: 50876775!
test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPorfolio

	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: account.
	portfolio addAccountable: portfolio2.
	
	self 
		should: [ portfolio addAccountable: account ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 11:50:37'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 11:50:37'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:50:37'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 11:50:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:50:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:50:37'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 11:50:37'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 11:50:37'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio stamp: 'JPF 5/22/2021 11:50:40'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPorfolio stamp: 'JPF 5/22/2021 11:50:40'!
ERROR!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPorfolio stamp: 'JPF 5/22/2021 11:50:40'!
ERROR!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/22/2021 11:52:03' prior: 50876790!
test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPorfolio

	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: { account }.
	portfolio addAccountable: portfolio2.
	
	self 
		should: [ portfolio addAccountable: account ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !
!PortfolioTest methodsFor: 'test data' stamp: 'JPF 5/22/2021 11:52:17' prior: 50875467!
portfolioWith: accountables

	| portfolio |
	
	portfolio _ Portfolio new.
	accountables do: [ :anAccount | portfolio addAccountable: anAccount ].
	
	^ portfolio! !
!PortfolioTest methodsFor: 'test data' stamp: 'JPF 5/22/2021 11:52:30' prior: 50876866!
portfolioWith: accountables

	| portfolio |
	
	portfolio _ Portfolio new.
	accountables do: [ :accountable | portfolio addAccountable: accountable ].
	
	^ portfolio! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 11:52:44'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 11:52:44'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:52:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 11:52:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:52:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 11:52:44'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 11:52:44'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 11:52:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 11:52:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 11:52:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 11:52:44'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 11:52:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 11:52:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 11:52:44'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio stamp: 'JPF 5/22/2021 11:52:44'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPorfolio stamp: 'JPF 5/22/2021 11:52:44'!
FAILURE!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPorfolio stamp: 'JPF 5/22/2021 11:52:44'!
FAILURE!
!Portfolio methodsFor: 'assertions' stamp: 'JPF 5/22/2021 11:57:57' prior: 50876584!
assertPortfolioDoesNotHave: accountableToAdd

	^ (accountables anySatisfy: [ :accountable | accountable includes: accountableToAdd ])
		ifTrue: [self error: self class cantHaveRepeatedAccountsErrorDescription ]! !
!Portfolio methodsFor: 'testing' stamp: 'JPF 5/22/2021 11:59:20'!
includes: anAccount
	
	^ accountables anySatisfy: [ :accountable | accountable includes: anAccount ].! !
!Portfolio methodsFor: 'assertions' stamp: 'JPF 5/22/2021 12:00:37' prior: 50876953!
assertPortfolioDoesNotHave: accountableToAdd

	^ (self includes: accountableToAdd)		ifTrue: [self error: self class cantHaveRepeatedAccountsErrorDescription ]! !
!Portfolio methodsFor: 'assertions' stamp: 'JPF 5/22/2021 12:00:42' prior: 50876968!
assertPortfolioDoesNotHave: accountableToAdd

	^ (self includes: accountableToAdd)	
		ifTrue: [self error: self class cantHaveRepeatedAccountsErrorDescription ]! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'JPF 5/22/2021 12:01:40'!
includes: anAccount
	
	^ false.! !
!Portfolio methodsFor: 'testing' stamp: 'JPF 5/22/2021 12:04:48' prior: 50876962!
includes: anAccount
	
	^ accountables anySatisfy: [ :accountable | accountable == anAccount or: [ accountable includes: anAccount ]].! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 12:05:54'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 12:05:54'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 12:05:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 12:05:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 12:05:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 12:05:54'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 12:05:54'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 12:05:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 12:05:54'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 12:05:54'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 12:05:54'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 12:05:54'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 12:05:54'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 12:05:54'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio stamp: 'JPF 5/22/2021 12:05:54'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPorfolio stamp: 'JPF 5/22/2021 12:05:54'!
PASSED!
!Accountable methodsFor: 'testing' stamp: 'JPF 5/22/2021 12:07:33'!
includes: accountable
	
	self subclassResponsibility! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/22/2021 12:08:58'!
test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio
	
	| portfolio account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	
	self 
		should: [ portfolio addAccountable: account.
			portfolio addAccountable: account ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!methodRemoval: PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio stamp: 'JPF 5/22/2021 12:08:59'!
test15ShouldFailWhenAddingTheSameAccountTwiceToAPorfolio
	
	| portfolio account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	
	self 
		should: [ portfolio addAccountable: account.
			portfolio addAccountable: account ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/22/2021 12:09:18'!
test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio

	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: { account }.
	portfolio addAccountable: portfolio2.
	
	self 
		should: [ portfolio addAccountable: account ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!methodRemoval: PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPorfolio stamp: 'JPF 5/22/2021 12:09:31'!
test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPorfolio

	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: { account }.
	portfolio addAccountable: portfolio2.
	
	self 
		should: [ portfolio addAccountable: account ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 12:09:35'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 12:09:35'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 12:09:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 12:09:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 12:09:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 12:09:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 12:09:35'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 12:09:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 12:09:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 12:09:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 12:09:35'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 12:09:35'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 12:09:35'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 12:09:35'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/22/2021 12:09:35'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/22/2021 12:09:35'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 12:09:39'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 12:09:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 12:09:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 12:09:39'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 12:09:39'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 12:09:39'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 12:09:39'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 12:09:39'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/22/2021 12:09:39'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/22/2021 12:09:39'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 12:09:41'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 12:09:41'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 12:09:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 12:09:41'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 12:09:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 12:09:41'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 12:09:41'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 12:09:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 12:09:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 12:09:41'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 12:09:41'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 12:09:41'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 12:09:41'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 12:09:41'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/22/2021 12:09:41'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/22/2021 12:09:41'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 12:09:48'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 12:09:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 12:09:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 12:09:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 12:09:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 12:09:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 12:09:48'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 12:09:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 12:09:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 12:09:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 12:09:48'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 12:09:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 12:09:48'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 12:09:48'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/22/2021 12:09:48'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/22/2021 12:09:48'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/22/2021 12:09:50'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 12:09:50'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 12:09:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/22/2021 12:09:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 12:09:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/22/2021 12:09:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/22/2021 12:09:50'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/22/2021 12:09:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 12:09:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/22/2021 12:09:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/22/2021 12:09:50'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/22/2021 12:09:50'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/22/2021 12:09:50'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/22/2021 12:09:50'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/22/2021 12:09:50'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/22/2021 12:09:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/22/2021 12:09:57'!
PASSED!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/22/2021 12:12:24'!
test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: { account }.
	portfolio addAccountable: portfolio2.
	
	self 
		should: [ portfolio addAccountable: account ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/22/2021 12:12:56' prior: 50877461!
test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: { account }.
	portfolio addAccountable: account.
	
	
	self 
		should: [ portfolio addAccountable: portfolio2. ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/22/2021 12:13:08' prior: 50877478!
test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: { account }.
	portfolio addAccountable: account.
	
	self 
		should: [ portfolio addAccountable: portfolio2. ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/22/2021 12:13:20'!
FAILURE!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/22/2021 15:30:24'!
FAILURE!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/22/2021 15:30:24'!
FAILURE!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/22/2021 15:30:31'!
FAILURE!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/22/2021 15:30:31'!
FAILURE!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/22/2021 15:30:36'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/22/2021 15:30:38'!
PASSED!

----QUIT----(22 May 2021 22:50:29) Portfolio.image priorSource: 17245885!

----STARTUP---- (23 May 2021 10:00:54) as /home/juan/Apps/CuisUniversity/linux64/Portfolio.image!

!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 10:21:45' prior: 50876592!
addAccountable: anAccountable

	anAccountable accounts do: [ self assertPortfolioDoesNotHave: anAccountable ].
	accountables add: anAccountable! !
!Portfolio methodsFor: 'accounts' stamp: 'JPF 5/23/2021 10:24:18'!
accounts
	
	accountables inject: OrderedCollection new into: [ :accounts :accountable | accounts addAll: accountable accounts ].! !
!ReceptiveAccount methodsFor: 'accounts' stamp: 'JPF 5/23/2021 10:25:17'!
accounts
	
	^ {self copy}.! !
!Portfolio methodsFor: 'accounts' stamp: 'JPF 5/23/2021 10:25:27' prior: 50877556!
accounts
	
	^ accountables inject: OrderedCollection new into: [ :accounts :accountable | accounts addAll: accountable accounts ].! !

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 10:25:39'!
FAILURE!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 10:25:39'!
ERROR!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 10:25:39'!
ERROR!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 10:25:50'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 10:26:42' prior: 50877549!
addAccountable: anAccountable

	anAccountable accounts do: [ :account | self assertPortfolioDoesNotHave: account ].
	accountables add: anAccountable! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 10:26:46'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 10:26:46'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 10:26:46'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 10:26:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 10:26:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 10:26:46'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 10:26:46'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 10:26:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 10:26:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 10:26:46'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 10:26:46'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 10:26:46'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 10:26:46'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 10:26:46'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 10:26:46'!
FAILURE!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 10:26:46'!
FAILURE!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 10:26:46'!
FAILURE!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 10:26:50'!
FAILURE!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 10:28:53'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 10:28:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 10:28:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 10:28:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 10:28:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 10:28:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 10:28:53'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 10:28:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 10:28:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 10:28:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 10:28:53'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 10:28:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 10:28:53'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 10:28:53'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 10:28:53'!
FAILURE!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 10:28:53'!
FAILURE!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 10:28:53'!
FAILURE!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 10:28:56'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JPF 5/23/2021 10:31:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JPF 5/23/2021 10:31:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JPF 5/23/2021 10:31:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JPF 5/23/2021 10:31:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JPF 5/23/2021 10:31:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JPF 5/23/2021 10:31:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JPF 5/23/2021 10:31:17'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 10:31:20'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 10:31:20'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 10:31:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 10:31:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 10:31:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 10:31:20'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 10:31:20'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 10:31:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 10:31:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 10:31:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 10:31:20'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 10:31:20'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 10:31:20'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 10:31:20'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 10:31:20'!
FAILURE!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 10:31:20'!
FAILURE!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 10:31:20'!
FAILURE!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 10:31:27'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 10:32:41' prior: 50877592!
addAccountable: anAccountable
	
	| accountsToAdd |
	
	accountsToAdd _ anAccountable accounts.
	
	accountsToAdd do: [ :account | self assertPortfolioDoesNotHave: account ].
	accountables add: anAccountable! !
!ReceptiveAccount methodsFor: 'accounts' stamp: 'JPF 5/23/2021 10:35:17' prior: 50877563!
accounts
	
	^ { self }! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 10:35:20'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 10:35:20'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 10:35:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 10:35:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 10:35:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 10:35:20'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 10:35:20'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 10:35:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 10:35:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 10:35:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 10:35:20'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 10:35:20'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 10:35:20'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 10:35:20'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 10:35:20'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 10:35:20'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 10:35:20'!
PASSED!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 10:37:20'!
test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: { account }.
	portfolio addAccountable: account.
	
	self 
		should: [ portfolio addAccountable: portfolio2. ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 10:40:54' prior: 50877934!
test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount
	| porfolioRoot portfolioToAdd portfolio account|
	
	account _ self accountWithBalance50.
	porfolioRoot _ self portfolioWith: { account }.
	
	portfolioToAdd _ self portfolioWith: { porfolioRoot }.
	porfolioRoot addAccountable: account.
	
	self 
		should: [ porfolioRoot addAccountable: portfolioToAdd. ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 10:41:26' prior: 50877951!
test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount
	| porfolioRoot portfolioToAdd portfolio account|
	
	account _ self accountWithBalance50.
	portfolio _ Portfolio new.
	porfolioRoot _ self portfolioWith: { account. portfolio }.
	
	portfolioToAdd _ self portfolioWith: { porfolioRoot }.
	porfolioRoot addAccountable: account.
	
	self 
		should: [ porfolioRoot addAccountable: portfolioToAdd. ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 10:42:20' prior: 50877970!
test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount
	| porfolioRoot portfolioToAdd portfolio account|
	
	account _ self accountWithBalance50.
	portfolio _ Portfolio new.
	porfolioRoot _ self portfolioWith: { account. portfolio }.
	portfolioToAdd _ self portfolioWith: { account }.
	
	self 
		should: [ portfolio addAccountable: portfolioToAdd. ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 10:43:17'!
FAILURE!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 10:43:24'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 10:43:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 10:43:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 10:43:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 10:43:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 10:43:24'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 10:43:24'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 10:43:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 10:43:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 10:43:24'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 10:43:24'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 10:43:24'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 10:43:24'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 10:43:24'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 10:43:24'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 10:43:24'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 10:43:24'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 10:43:24'!
FAILURE!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 10:43:24'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 10:46:18' prior: 50877850!
addAccountable: anAccountable
	
	| accountsToAdd |
	
	accountsToAdd _ anAccountable accounts.
	
	accountsToAdd do: [ :account | self assertPortfolioDoesNotHave: account ].
	accountables add: anAccountable.
	anAccountable father: self.! !

!classDefinition: #Accountable category: #'Portfolio-Ejercicio' stamp: 'JPF 5/23/2021 10:47:34'!
Object subclass: #Accountable
	instanceVariableNames: 'father'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Accountable methodsFor: 'portfolio' stamp: 'JPF 5/23/2021 10:47:32'!
father: aPortfolio
	
	father _ aPortfolio! !
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 10:55:39' prior: 50878095!
addAccountable: anAccountable
	
	"| accountsToAdd |
	
	accountsToAdd _ anAccountable accounts.
	
	accountsToAdd do: [ :account | self assertPortfolioDoesNotHave: account ].
	accountables add: anAccountable.
	anAccountable father: self."
	
	| rootPortfolios |
	
	rootPortfolios _ self rootPortfoliosAfterAdding: anAccountable.
	rootPortfolios anySatisfy: [ :rootPortfolio || rootPortfolioAccounts totalAccountsCount nonRepeatedRootPortfolioAccounts |
		rootPortfolioAccounts _ rootPortfolio accounts.
		totalAccountsCount _ rootPortfolioAccounts size.
		nonRepeatedRootPortfolioAccounts _ rootPortfolioAccounts asSet.
		].! !
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 11:00:01' prior: 50878117!
addAccountable: anAccountable
	
	"| accountsToAdd |
	
	accountsToAdd _ anAccountable accounts.
	
	accountsToAdd do: [ :account | self assertPortfolioDoesNotHave: account ].
	accountables add: anAccountable.
	anAccountable father: self."
	
	| rootPortfolios |
	
	accountables add: anAccountable.
	anAccountable father: self.
	rootPortfolios _ self rootPortfolios.
	(rootPortfolios anySatisfy: [ :rootPortfolio || rootPortfolioAccounts nonRepeatedRootPortfolioAccounts |
		rootPortfolioAccounts _ rootPortfolio accounts.
		nonRepeatedRootPortfolioAccounts _ rootPortfolioAccounts asSet.
		rootPortfolioAccounts size > nonRepeatedRootPortfolioAccounts size.
		]) ifTrue: [
			accountables removeFirst: anAccountable.
			anAccountable father: nil.
		].! !
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 11:00:27' prior: 50878140!
addAccountable: anAccountable
	
	"| accountsToAdd |
	
	accountsToAdd _ anAccountable accounts.
	
	accountsToAdd do: [ :account | self assertPortfolioDoesNotHave: account ].
	accountables add: anAccountable.
	anAccountable father: self."
	
	| rootPortfolios |
	
	accountables add: anAccountable.
	anAccountable father: self.
	rootPortfolios _ self rootPortfolios.
	(rootPortfolios anySatisfy: [ :rootPortfolio || rootPortfolioAccounts nonRepeatedRootPortfolioAccounts |
		rootPortfolioAccounts _ rootPortfolio accounts.
		nonRepeatedRootPortfolioAccounts _ rootPortfolioAccounts asSet.
		rootPortfolioAccounts size > nonRepeatedRootPortfolioAccounts size.
		]) ifTrue: [
			accountables removeFirst: anAccountable.
			anAccountable father: nil.
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		].! !
!Accountable methodsFor: 'portfolio' stamp: 'JPF 5/23/2021 11:02:22'!
rootPortfolios
	
	! !
!Accountable methodsFor: 'portfolio' stamp: 'JPF 5/23/2021 11:03:06'!
fathers: aPortfolio
	
	father _ aPortfolio! !

!methodRemoval: Accountable #father: stamp: 'JPF 5/23/2021 11:03:06'!
father: aPortfolio
	
	father _ aPortfolio!
!Accountable methodsFor: 'portfolio' stamp: 'JPF 5/23/2021 11:03:39'!
addFather: aPortfolio
	
	father _ aPortfolio! !

!methodRemoval: Accountable #fathers: stamp: 'JPF 5/23/2021 11:03:39'!
fathers: aPortfolio
	
	father _ aPortfolio!
!Accountable methodsFor: 'portfolio' stamp: 'JPF 5/23/2021 11:03:51' prior: 50878206!
addFather: aPortfolio
	
	father add: aPortfolio! !

!classDefinition: #Accountable category: #'Portfolio-Ejercicio' stamp: 'JPF 5/23/2021 11:04:01'!
Object subclass: #Accountable
	instanceVariableNames: 'fathers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Accountable methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 11:04:01' prior: 50878214!
addFather: aPortfolio
	
	fathers add: aPortfolio! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'JPF 5/23/2021 11:04:59' prior: 50870786 overrides: 16896425!
initialize

	transactions := OrderedCollection new.
	fathers := OrderedCollection new.! !
!Portfolio methodsFor: 'initialization' stamp: 'JPF 5/23/2021 11:05:18' prior: 50875834 overrides: 16896425!
initialize

	accountables _ OrderedCollection new.
	fathers := OrderedCollection new.! !
!Portfolio methodsFor: 'initialization' stamp: 'JPF 5/23/2021 11:05:23' prior: 50878240 overrides: 16896425!
initialize

	accountables _ OrderedCollection new.
	fathers _ OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'initialization' stamp: 'JPF 5/23/2021 11:05:33' prior: 50878233 overrides: 16896425!
initialize

	transactions _ OrderedCollection new.
	fathers _ OrderedCollection new.! !
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 11:05:49' prior: 50878167!
addAccountable: anAccountable
	
	"| accountsToAdd |
	
	accountsToAdd _ anAccountable accounts.
	
	accountsToAdd do: [ :account | self assertPortfolioDoesNotHave: account ].
	accountables add: anAccountable.
	anAccountable father: self."
	
	| rootPortfolios |
	
	accountables add: anAccountable.
	anAccountable addFather: self.
	rootPortfolios _ self rootPortfolios.
	(rootPortfolios anySatisfy: [ :rootPortfolio || rootPortfolioAccounts nonRepeatedRootPortfolioAccounts |
		rootPortfolioAccounts _ rootPortfolio accounts.
		nonRepeatedRootPortfolioAccounts _ rootPortfolioAccounts asSet.
		rootPortfolioAccounts size > nonRepeatedRootPortfolioAccounts size.
		]) ifTrue: [
			accountables removeFirst: anAccountable.
			anAccountable father: nil.
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		].! !
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 11:06:08' prior: 50878260!
addAccountable: anAccountable
	
	"| accountsToAdd |
	
	accountsToAdd _ anAccountable accounts.
	
	accountsToAdd do: [ :account | self assertPortfolioDoesNotHave: account ].
	accountables add: anAccountable.
	anAccountable father: self."
	
	| rootPortfolios |
	
	accountables add: anAccountable.
	anAccountable addFather: self.
	rootPortfolios _ self rootPortfolios.
	(rootPortfolios anySatisfy: [ :rootPortfolio || rootPortfolioAccounts nonRepeatedRootPortfolioAccounts |
		rootPortfolioAccounts _ rootPortfolio accounts.
		nonRepeatedRootPortfolioAccounts _ rootPortfolioAccounts asSet.
		rootPortfolioAccounts size > nonRepeatedRootPortfolioAccounts size.
		]) ifTrue: [
			accountables removeFirst: anAccountable.
			anAccountable removeFather: self.
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		].! !
!Accountable methodsFor: 'portfolio' stamp: 'JPF 5/23/2021 11:06:30'!
removeFather: aPortfolio
	
	fathers removeFirst: aPortfolio! !
!Accountable methodsFor: 'portfolio' stamp: 'JPF 5/23/2021 11:11:29' prior: 50878195!
rootPortfolios

	^ fathers inject: OrderedCollection new into: [ :rootPortfolios :fatherPortfolio |
		(fatherPortfolio fathers isEmpty)
			ifTrue: [ rootPortfolios add: fatherPortfolio ]
			ifFalse: [ rootPortfolios addAll: fatherPortfolio rootPortfolios ].
		]
	
	! !
!Accountable methodsFor: 'father portfolios' stamp: 'JPF 5/23/2021 11:13:12'!
fathers
	
	^ fathers! !

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 11:13:47'!
FAILURE!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 11:13:47'!
FAILURE!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 11:13:47'!
FAILURE!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 11:13:47'!
FAILURE!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 11:13:53'!
FAILURE!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 11:14:25'!
FAILURE!
!Accountable methodsFor: 'father portfolios' stamp: 'JPF 5/23/2021 11:28:35' prior: 50878323!
rootPortfolios

	| rootPortfolios |
	rootPortfolios _ OrderedCollection new.
	
	fathers 
		ifEmpty: [ rootPortfolios add: self] 
		ifNotEmpty: [ ^ fathers do: [ :fatherPortfolio |
		(fatherPortfolio fathers isEmpty)
			ifTrue: [ rootPortfolios add: fatherPortfolio ]
			ifFalse: [ rootPortfolios addAll: fatherPortfolio rootPortfolios ].
		rootPortfolios addAll: fatherPortfolio rootPortfolios.
		]].

	^ rootPortfolios
	
	! !
!Accountable methodsFor: 'father portfolios' stamp: 'JPF 5/23/2021 11:28:43' prior: 50878365!
rootPortfolios

	| rootPortfolios |
	rootPortfolios _ OrderedCollection new.
	
	fathers 
		ifEmpty: [ rootPortfolios add: self] 
		ifNotEmpty: [ ^ fathers do: [ :fatherPortfolio |
		"(fatherPortfolio fathers isEmpty)
			ifTrue: [ rootPortfolios add: fatherPortfolio ]
			ifFalse: [ rootPortfolios addAll: fatherPortfolio rootPortfolios ]."
		rootPortfolios addAll: fatherPortfolio rootPortfolios.
		]].

	^ rootPortfolios
	
	! !
!Accountable methodsFor: 'father portfolios' stamp: 'JPF 5/23/2021 11:29:36' prior: 50878382!
rootPortfolios

	| rootPortfolios |
	rootPortfolios _ OrderedCollection new.
	
	fathers 
		ifEmpty: [ rootPortfolios add: self] 
		ifNotEmpty: [ ^ fathers do: [ :fatherPortfolio |
			rootPortfolios addAll: fatherPortfolio rootPortfolios.
		]].

	^ rootPortfolios
	
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 11:29:50'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 11:29:50'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 11:29:50'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 11:29:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 11:29:50'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 11:29:50'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 11:29:50'!
ERROR!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 11:29:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 11:29:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 11:29:50'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 11:29:50'!
ERROR!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 11:29:50'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 11:29:50'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 11:29:50'!
ERROR!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 11:29:50'!
FAILURE!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 11:29:50'!
FAILURE!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 11:29:50'!
FAILURE!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 11:29:50'!
FAILURE!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 11:30:47'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 11:30:47'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 11:30:47'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 11:30:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 11:30:47'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 11:30:47'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 11:30:47'!
ERROR!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 11:30:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 11:30:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 11:30:47'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 11:30:47'!
ERROR!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 11:30:47'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 11:30:47'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 11:30:47'!
ERROR!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 11:30:47'!
FAILURE!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 11:30:47'!
FAILURE!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 11:30:47'!
FAILURE!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 11:30:47'!
FAILURE!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 11:30:56'!
ERROR!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 11:32:57'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 11:32:57'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 11:32:57'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 11:32:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 11:32:57'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 11:32:57'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 11:32:57'!
ERROR!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 11:32:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 11:32:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 11:32:57'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 11:32:57'!
ERROR!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 11:32:57'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 11:32:57'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 11:32:57'!
ERROR!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 11:32:57'!
FAILURE!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 11:32:57'!
FAILURE!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 11:32:57'!
FAILURE!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 11:32:57'!
FAILURE!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 11:33:08'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 11:34:43'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 11:35:29'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 11:37:21'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 11:42:27'!
ERROR!
!Portfolio methodsFor: 'accounts' stamp: 'JPF 5/23/2021 11:43:52' prior: 50877567!
accounts
	
	^ accountables inject: OrderedCollection new into: [ :accounts :accountable || accountsToAdd |
		accountsToAdd := accountable accounts.
		accounts addAll: accountsToAdd ].! !
!ReceptiveAccount methodsFor: 'accounts' stamp: 'JPF 5/23/2021 11:45:21' prior: 50877860!
accounts
	
	^ OrderedCollection with: self.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 11:45:25'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 11:45:25'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 11:45:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 11:45:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 11:45:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 11:45:25'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 11:45:25'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 11:45:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 11:45:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 11:45:25'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 11:45:25'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 11:45:25'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 11:45:25'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 11:45:25'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 11:45:25'!
FAILURE!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 11:45:25'!
FAILURE!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 11:45:25'!
FAILURE!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 11:45:25'!
FAILURE!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 11:45:37'!
FAILURE!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 11:53:08'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 11:57:16' prior: 50878289!
addAccountable: anAccountable
	
	"| accountsToAdd |
	
	accountsToAdd _ anAccountable accounts.
	
	accountsToAdd do: [ :account | self assertPortfolioDoesNotHave: account ].
	accountables add: anAccountable.
	anAccountable father: self."
	
	| rootPortfolios accountableToAddAccounts |
	
	"accountables add: anAccountable.
	anAccountable addFather: self."
	accountableToAddAccounts _ anAccountable accounts.
	rootPortfolios _ self rootPortfolios.
	(rootPortfolios anySatisfy: [ :rootPortfolio || rootPortfolioAccounts nonRepeatedRootPortfolioAccounts |
		rootPortfolioAccounts _ rootPortfolio accounts.
		nonRepeatedRootPortfolioAccounts _ rootPortfolioAccounts asSet.
		rootPortfolioAccounts size > nonRepeatedRootPortfolioAccounts size.
		]) ifTrue: [
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			accountables add: anAccountable.
			anAccountable addFather: self.
		].! !
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 11:58:02' prior: 50878758!
addAccountable: anAccountable
	
	"| accountsToAdd |
	
	accountsToAdd _ anAccountable accounts.
	
	accountsToAdd do: [ :account | self assertPortfolioDoesNotHave: account ].
	accountables add: anAccountable.
	anAccountable father: self."
	
	| rootPortfolios accountableToAddAccounts |
	
	"accountables add: anAccountable.
	anAccountable addFather: self."
	accountableToAddAccounts _ anAccountable accounts.
	rootPortfolios _ self rootPortfolios.
	(rootPortfolios anySatisfy: [ :rootPortfolio || newRootPortfolioAccounts nonRepeatedRootPortfolioAccounts |
		newRootPortfolioAccounts _ rootPortfolio accounts.
		nonRepeatedRootPortfolioAccounts _ newRootPortfolioAccounts asSet.
		newRootPortfolioAccounts size > nonRepeatedRootPortfolioAccounts size.
		]) ifTrue: [
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			accountables add: anAccountable.
			anAccountable addFather: self.
		].! !
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 11:58:26' prior: 50878790!
addAccountable: anAccountable
	
	"| accountsToAdd |
	
	accountsToAdd _ anAccountable accounts.
	
	accountsToAdd do: [ :account | self assertPortfolioDoesNotHave: account ].
	accountables add: anAccountable.
	anAccountable father: self."
	
	| rootPortfolios accountableToAddAccounts |
	
	"accountables add: anAccountable.
	anAccountable addFather: self."
	accountableToAddAccounts _ anAccountable accounts.
	rootPortfolios _ self rootPortfolios.
	(rootPortfolios anySatisfy: [ :rootPortfolio || newRootPortfolioAccounts nonRepeatedRootPortfolioAccounts |
		newRootPortfolioAccounts _ rootPortfolio accounts.
		newRootPortfolioAccounts addAll: accountableToAddAccounts accounts.
		nonRepeatedRootPortfolioAccounts _ newRootPortfolioAccounts asSet.
		newRootPortfolioAccounts size > nonRepeatedRootPortfolioAccounts size.
		]) ifTrue: [
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			accountables add: anAccountable.
			anAccountable addFather: self.
		].! !
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 11:58:49' prior: 50878822!
addAccountable: anAccountable
	
	"| accountsToAdd |
	
	accountsToAdd _ anAccountable accounts.
	
	accountsToAdd do: [ :account | self assertPortfolioDoesNotHave: account ].
	accountables add: anAccountable.
	anAccountable father: self."
	
	| rootPortfolios accountableToAddAccounts |
	
	"accountables add: anAccountable.
	anAccountable addFather: self."
	accountableToAddAccounts _ anAccountable accounts.
	rootPortfolios _ self rootPortfolios.
	(rootPortfolios anySatisfy: [ :rootPortfolio || newRootPortfolioAccounts nonRepeatedNewRootPortfolioAccounts |
		newRootPortfolioAccounts _ rootPortfolio accounts.
		newRootPortfolioAccounts addAll: accountableToAddAccounts accounts.
		nonRepeatedNewRootPortfolioAccounts _ newRootPortfolioAccounts asSet.
		newRootPortfolioAccounts size > nonRepeatedNewRootPortfolioAccounts size.
		]) ifTrue: [
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			accountables add: anAccountable.
			anAccountable addFather: self.
		].! !
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 11:59:59' prior: 50878856!
addAccountable: anAccountable
	
	"| accountsToAdd |
	
	accountsToAdd _ anAccountable accounts.
	
	accountsToAdd do: [ :account | self assertPortfolioDoesNotHave: account ].
	accountables add: anAccountable.
	anAccountable father: self."
	
	| rootPortfolios accountableToAddAccounts |
	
	"accountables add: anAccountable.
	anAccountable addFather: self."
	accountableToAddAccounts _ anAccountable accounts.
	rootPortfolios _ self rootPortfolios.
	(rootPortfolios anySatisfy: [ :rootPortfolio || newRootPortfolioAccounts nonRepeatedNewRootPortfolioAccounts |
		newRootPortfolioAccounts _ rootPortfolio accounts.
		newRootPortfolioAccounts addAll: accountableToAddAccounts.
		nonRepeatedNewRootPortfolioAccounts _ newRootPortfolioAccounts asSet.
		newRootPortfolioAccounts size > nonRepeatedNewRootPortfolioAccounts size.
		]) ifTrue: [
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			accountables add: anAccountable.
			anAccountable addFather: self.
		].! !

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 12:01:37'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 12:01:44'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 12:01:44'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 12:01:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 12:01:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 12:01:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 12:01:44'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 12:01:44'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 12:01:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 12:01:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 12:01:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 12:01:44'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 12:01:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 12:01:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 12:01:44'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 12:01:44'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 12:01:44'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 12:01:44'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 12:01:44'!
FAILURE!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 12:01:44'!
FAILURE!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 12:01:59'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 12:01:59'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 12:01:59'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 12:01:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 12:01:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 12:01:59'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 12:01:59'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 12:01:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 12:01:59'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 12:01:59'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 12:01:59'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 12:01:59'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 12:01:59'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 12:01:59'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 12:01:59'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 12:01:59'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 12:01:59'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 12:01:59'!
FAILURE!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 12:01:59'!
FAILURE!

Object subclass: #AccountCollectorVisitor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #AccountCollectorVisitor category: #'Portfolio-Ejercicio' stamp: 'JPF 5/23/2021 12:10:06'!
Object subclass: #AccountCollectorVisitor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #AccountCollectorVisitor stamp: 'JPF 5/23/2021 12:13:46'!
Object subclass: #AccountCollectorVisitor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'accounts' stamp: 'JPF 5/23/2021 12:17:07' prior: 50878661!
accounts
	
	"^ accountables inject: OrderedCollection new into: [ :accounts :accountable || accountsToAdd |
		accountsToAdd := accountable accounts.
		accounts addAll: accountsToAdd ]."
	
	^ accountables inject: OrderedCollection new
		into: [ :accounts :accountable |
			accountable addAccountsTo: accounts.
			accounts. ]! !
!Portfolio methodsFor: 'accounts' stamp: 'JPF 5/23/2021 12:17:45' prior: 50879110!
accounts
	
	^ accountables inject: OrderedCollection new into: [ :accounts :accountable || accountsToAdd |
		accountsToAdd := accountable accounts.
		accounts addAll: accountsToAdd ].
	
	"^ accountables inject: OrderedCollection new
		into: [ :accounts :accountable |
			accountable addAccountsTo: accounts.
			accounts. ]"! !
!Portfolio methodsFor: 'accounts' stamp: 'JPF 5/23/2021 12:18:08' prior: 50879123!
accounts
	
	^ accountables inject: OrderedCollection new into: [ :accounts :accountable || accountsToAdd |
		accountsToAdd := accountable accounts.
		accounts addAll: accountsToAdd.
		accounts.
		 ].
	
	"^ accountables inject: OrderedCollection new
		into: [ :accounts :accountable |
			accountable addAccountsTo: accounts.
			accounts. ]"! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 12:18:20'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 12:18:20'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 12:18:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 12:18:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 12:18:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 12:18:20'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 12:18:20'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 12:18:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 12:18:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 12:18:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 12:18:20'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 12:18:20'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 12:18:20'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 12:18:20'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 12:18:20'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 12:18:20'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 12:18:20'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 12:18:20'!
PASSED!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 12:21:53'!
test19ShouldFailWhenAddingAPortfolioWithAnAccountToItself
	| portfolio account|
	
	account _ self accountWithBalance50.
	portfolio _ self portfolioWith: { account }.
	
	self 
		should: [ portfolio addAccountable: portfolio. ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAPortfolioWithAnAccountToItself stamp: 'JPF 5/23/2021 12:21:57'!
PASSED!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 12:22:27' prior: 50879225!
test19ShouldFailWhenAddingAPortfolioWithAnAccountToItself
	| portfolio |
	
	portfolio _ Portfolio new.
	
	self 
		should: [ portfolio addAccountable: portfolio. ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 12:22:55'!
test19ShouldFailWhenAddingAnEmptyPortfolioToItself
	| portfolio |
	
	portfolio _ Portfolio new.
	
	self 
		should: [ portfolio addAccountable: portfolio. ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!methodRemoval: PortfolioTest #test19ShouldFailWhenAddingAPortfolioWithAnAccountToItself stamp: 'JPF 5/23/2021 12:23:13'!
test19ShouldFailWhenAddingAPortfolioWithAnAccountToItself
	| portfolio |
	
	portfolio _ Portfolio new.
	
	self 
		should: [ portfolio addAccountable: portfolio. ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 12:23:17'!
FAILURE!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 12:23:17'!
FAILURE!

!classDefinition: #PortfolioVisitor category: #'Portfolio-Ejercicio' stamp: 'JPF 5/23/2021 12:31:57'!
Object subclass: #PortfolioVisitor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 12:31:50' prior: 50878890!
addAccountable: anAccountable
	
	"| accountsToAdd |
	
	accountsToAdd _ anAccountable accounts.
	
	accountsToAdd do: [ :account | self assertPortfolioDoesNotHave: account ].
	accountables add: anAccountable.
	anAccountable father: self."
	
	| rootPortfolios accountableToAddAccounts |
	
	accountables add: anAccountable.
	anAccountable addFather: self.
	accountableToAddAccounts _ anAccountable accounts.
	rootPortfolios _ self rootPortfolios.
	(rootPortfolios anySatisfy: [ :rootPortfolio || newRootPortfolioAccounts nonRepeatedNewRootPortfolioAccounts visitor |
		"newRootPortfolioAccounts _ rootPortfolio accounts.
		newRootPortfolioAccounts addAll: accountableToAddAccounts.
		nonRepeatedNewRootPortfolioAccounts _ newRootPortfolioAccounts asSet.
		newRootPortfolioAccounts size > nonRepeatedNewRootPortfolioAccounts size."
		visitor _ PortfolioVisitor new.
		visitor hasRepeatedNodes: rootPortfolio.
		]) ifTrue: [
			accountables remove: anAccountable.
			anAccountable removeFather: self.
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			"accountables add: anAccountable.
			anAccountable addFather: self."
		].! !
!PortfolioVisitor methodsFor: 'nil' stamp: 'JPF 5/23/2021 12:32:32'!
hasReapeatedNodes: aPortfolio
	
	! !

!classDefinition: #PortfolioVisitor category: #'Portfolio-Ejercicio' stamp: 'JPF 5/23/2021 12:34:26'!
Object subclass: #PortfolioVisitor
	instanceVariableNames: 'visited'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioVisitor methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 12:34:24' prior: 50879330!
hasReapeatedNodes: aPortfolio
	
	visited _ Set new.! !
!PortfolioVisitor methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 12:40:44' prior: 50879343!
hasReapeatedNodes: aPortfolio
	
	visited _ Set new.
	^ aPortfolio accept: self.! !
!Portfolio methodsFor: 'nil' stamp: 'JPF 5/23/2021 12:42:07'!
accept: visitor
	
	visitor doForPorfolio: self.! !
!ReceptiveAccount methodsFor: 'nil' stamp: 'JPF 5/23/2021 12:42:36'!
accept: visitor
	
	visitor doForAccount: self.! !

!classDefinition: #PortfolioVisitor category: #'Portfolio-Ejercicio' stamp: 'JPF 5/23/2021 12:48:01'!
Object subclass: #PortfolioVisitor
	instanceVariableNames: 'visited hasRepeatedNodes'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioVisitor methodsFor: 'nil' stamp: 'JPF 5/23/2021 12:47:54'!
doForPortfolio: aPortfolio
	
	(visited includes: aPortfolio) ifTrue: [ hasRepeatedNodes _ true ].
	visited add: aPortfolio.
	aPortfolio accountables do: [ :accountable | self visit: accountable ].! !
!PortfolioVisitor methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 12:49:42'!
visit: aPortfolio
	
	visited _ Set new.
	^ aPortfolio accept: self.! !

!methodRemoval: PortfolioVisitor #hasReapeatedNodes: stamp: 'JPF 5/23/2021 12:49:42'!
hasReapeatedNodes: aPortfolio
	
	visited _ Set new.
	^ aPortfolio accept: self.!
!PortfolioVisitor methodsFor: 'initialization' stamp: 'JPF 5/23/2021 12:51:05' overrides: 16896425!
initialize
	
	hasRepeatedNodes _ false.
	visited _ Set new.! !
!PortfolioVisitor methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 12:51:53'!
doForAccount: anAccount
	
	(visited includes: anAccount) ifTrue: [ hasRepeatedNodes _ true ].
	visited add: anAccount.! !
!PortfolioVisitor methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 12:52:24' prior: 50879395!
doForAccount: anAccount
	
	(visited includes: anAccount)
		ifTrue: [ hasRepeatedNodes _ true ]
		ifFalse: [ visited add: anAccount ].
	! !
!Portfolio methodsFor: 'nil' stamp: 'JPF 5/23/2021 12:53:07'!
accountables
	
	^ accountables! !
!PortfolioVisitor methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 12:53:36' prior: 50879379!
visit: aPortfolio
	
	^ aPortfolio accept: self.! !
!PortfolioVisitor methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 12:54:03' prior: 50879370!
doForPortfolio: aPortfolio
	
	(visited includes: aPortfolio) ifTrue: [ hasRepeatedNodes _ true ].
	visited add: aPortfolio.
	aPortfolio accountables do: [ :accountable | accountable accept: self ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 12:54:34' prior: 50879353!
accept: visitor
	
	visitor doForPortfolio: self.! !
!PortfolioVisitor methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 12:55:45' prior: 50879419!
doForPortfolio: aPortfolio
	
	(visited includes: aPortfolio)
		ifTrue: [ hasRepeatedNodes _ true ]
		ifFalse: [ visited add: aPortfolio ].
	aPortfolio accountables do: [ :accountable | accountable accept: self ].! !
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 12:56:55' prior: 50879291!
addAccountable: anAccountable
	
	"| accountsToAdd |
	
	accountsToAdd _ anAccountable accounts.
	
	accountsToAdd do: [ :account | self assertPortfolioDoesNotHave: account ].
	accountables add: anAccountable.
	anAccountable father: self."
	
	| rootPortfolios accountableToAddAccounts |
	
	accountables add: anAccountable.
	anAccountable addFather: self.
	accountableToAddAccounts _ anAccountable accounts.
	rootPortfolios _ self rootPortfolios.
	(rootPortfolios anySatisfy: [ :rootPortfolio || newRootPortfolioAccounts nonRepeatedNewRootPortfolioAccounts visitor |
		"newRootPortfolioAccounts _ rootPortfolio accounts.
		newRootPortfolioAccounts addAll: accountableToAddAccounts.
		nonRepeatedNewRootPortfolioAccounts _ newRootPortfolioAccounts asSet.
		newRootPortfolioAccounts size > nonRepeatedNewRootPortfolioAccounts size."
		visitor _ PortfolioVisitor new.
		visitor visit: rootPortfolio.
		]) ifTrue: [
			accountables remove: anAccountable.
			anAccountable removeFather: self.
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			"accountables add: anAccountable.
			anAccountable addFather: self."
		].! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 12:57:22'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 12:57:22'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 12:57:22'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 12:57:22'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 12:57:22'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 12:57:22'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 12:57:22'!
ERROR!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 12:57:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 12:57:22'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 12:57:22'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 12:57:22'!
ERROR!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 12:57:22'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 12:57:22'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 12:57:22'!
ERROR!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 12:57:22'!
FAILURE!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 12:57:22'!
ERROR!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 12:57:22'!
ERROR!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 12:57:22'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 12:58:49' prior: 50879444!
addAccountable: anAccountable
	
	"| accountsToAdd |
	
	accountsToAdd _ anAccountable accounts.
	
	accountsToAdd do: [ :account | self assertPortfolioDoesNotHave: account ].
	accountables add: anAccountable.
	anAccountable father: self."
	
	| rootPortfolios |
	
	accountables add: anAccountable.
	anAccountable addFather: self.
	"accountableToAddAccounts _ anAccountable accounts."
	rootPortfolios _ self rootPortfolios.
	(rootPortfolios anySatisfy: [ :rootPortfolio || newRootPortfolioAccounts nonRepeatedNewRootPortfolioAccounts visitor |
		"newRootPortfolioAccounts _ rootPortfolio accounts.
		newRootPortfolioAccounts addAll: accountableToAddAccounts.
		nonRepeatedNewRootPortfolioAccounts _ newRootPortfolioAccounts asSet.
		newRootPortfolioAccounts size > nonRepeatedNewRootPortfolioAccounts size."
		visitor _ PortfolioVisitor new.
		visitor visit: rootPortfolio.
		]) ifTrue: [
			accountables remove: anAccountable.
			anAccountable removeFather: self.
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			"accountables add: anAccountable.
			anAccountable addFather: self."
		].! !
!PortfolioVisitor methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 13:00:25' prior: 50879434!
doForPortfolio: aPortfolio
	
	(visited includes: aPortfolio)
		ifTrue: [ hasRepeatedNodes _ true ]
		ifFalse: [ 
			visited add: aPortfolio.
			aPortfolio accountables do: [ :accountable | accountable accept: self ]
			].
	! !
!PortfolioVisitor methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 13:00:52' prior: 50879414!
visit: aPortfolio
	
	aPortfolio accept: self.
	^ hasRepeatedNodes.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 13:00:59'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:00:59'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:00:59'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:00:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:00:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:00:59'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 13:00:59'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 13:00:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 13:00:59'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 13:00:59'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 13:00:59'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 13:00:59'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 13:00:59'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 13:00:59'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:00:59'!
FAILURE!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:00:59'!
FAILURE!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:00:59'!
FAILURE!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 13:00:59'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 13:02:37' prior: 50879558!
addAccountable: anAccountable
	
	"| accountsToAdd |
	
	accountsToAdd _ anAccountable accounts.
	
	accountsToAdd do: [ :account | self assertPortfolioDoesNotHave: account ].
	accountables add: anAccountable.
	anAccountable father: self."
	
	| rootPortfolios |
	
	rootPortfolios _ self rootPortfolios.
	
	accountables add: anAccountable.
	anAccountable addFather: self.
	"accountableToAddAccounts _ anAccountable accounts."
	
	(rootPortfolios anySatisfy: [ :rootPortfolio || visitor |
		"newRootPortfolioAccounts _ rootPortfolio accounts.
		newRootPortfolioAccounts addAll: accountableToAddAccounts.
		nonRepeatedNewRootPortfolioAccounts _ newRootPortfolioAccounts asSet.
		newRootPortfolioAccounts size > nonRepeatedNewRootPortfolioAccounts size."
		visitor _ PortfolioVisitor new.
		visitor visit: rootPortfolio.
		]) ifTrue: [
			accountables remove: anAccountable.
			anAccountable removeFather: self.
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			"accountables add: anAccountable.
			anAccountable addFather: self."
		].! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 13:02:48'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:02:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:02:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:02:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:02:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:02:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 13:02:48'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 13:02:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 13:02:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 13:02:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 13:02:48'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 13:02:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 13:02:48'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 13:02:48'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:02:48'!
FAILURE!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:02:48'!
FAILURE!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:02:48'!
FAILURE!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 13:02:48'!
FAILURE!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 13:02:48'!
FAILURE!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:03:12'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 13:04:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 13:04:23'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 13:04:23'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 13:04:23'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 13:04:23'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 13:04:23'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 13:04:25'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:04:25'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:04:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:04:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:04:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:04:25'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 13:04:25'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 13:04:25'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:04:27'!
FAILURE!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:04:27'!
FAILURE!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:04:27'!
FAILURE!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 13:04:27'!
FAILURE!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 13:04:27'!
FAILURE!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:04:30'!
FAILURE!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:04:59'!
FAILURE!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:06:59'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 13:10:56' prior: 50879689!
addAccountable: anAccountable
	
	"| accountsToAdd |
	
	accountsToAdd _ anAccountable accounts.
	
	accountsToAdd do: [ :account | self assertPortfolioDoesNotHave: account ].
	accountables add: anAccountable.
	anAccountable father: self."
	
	| rootPortfolios |
	
	rootPortfolios _ self rootPortfolios.
	
	accountables add: anAccountable.
	anAccountable addFather: self.
	"accountableToAddAccounts _ anAccountable accounts."
	
	(rootPortfolios anySatisfy: [ :rootPortfolio || visitor |
		"newRootPortfolioAccounts _ rootPortfolio accounts.
		newRootPortfolioAccounts addAll: accountableToAddAccounts.
		nonRepeatedNewRootPortfolioAccounts _ newRootPortfolioAccounts asSet.
		newRootPortfolioAccounts size > nonRepeatedNewRootPortfolioAccounts size."
		visitor _ PortfolioVisitor new.
		visitor visit: rootPortfolio.
		]) ifTrue: [
			"accountables remove: anAccountable.
			anAccountable removeFather: self."
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			"accountables add: anAccountable.
			anAccountable addFather: self."
		].! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 13:11:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:11:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:11:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:11:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:11:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:11:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 13:11:10'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 13:11:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 13:11:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 13:11:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 13:11:10'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 13:11:10'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 13:11:10'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 13:11:10'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:11:10'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:11:10'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:11:10'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 13:11:10'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 13:11:10'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 13:11:15'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:11:15'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:11:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:11:15'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:11:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:11:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 13:11:15'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 13:11:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 13:11:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 13:11:15'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 13:11:15'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 13:11:15'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 13:11:15'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 13:11:15'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:11:15'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:11:15'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:11:15'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 13:11:15'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 13:11:15'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 13:12:35' prior: 50879901!
addAccountable: anAccountable
	
	"| accountsToAdd |
	
	accountsToAdd _ anAccountable accounts.
	
	accountsToAdd do: [ :account | self assertPortfolioDoesNotHave: account ].
	accountables add: anAccountable.
	anAccountable father: self."
	
	| rootPortfolios |
	
	rootPortfolios _ self rootPortfolios.
	
	accountables add: anAccountable.
	"anAccountable addFather: self."
	"accountableToAddAccounts _ anAccountable accounts."
	
	(rootPortfolios anySatisfy: [ :rootPortfolio || visitor |
		"newRootPortfolioAccounts _ rootPortfolio accounts.
		newRootPortfolioAccounts addAll: accountableToAddAccounts.
		nonRepeatedNewRootPortfolioAccounts _ newRootPortfolioAccounts asSet.
		newRootPortfolioAccounts size > nonRepeatedNewRootPortfolioAccounts size."
		visitor _ PortfolioVisitor new.
		visitor visit: rootPortfolio.
		]) ifTrue: [
			accountables remove: anAccountable.
			"anAccountable removeFather: self."
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			"accountables add: anAccountable.
			anAccountable addFather: self."
		].! !
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 13:13:01' prior: 50880097!
addAccountable: anAccountable
	
	"| accountsToAdd |
	
	accountsToAdd _ anAccountable accounts.
	
	accountsToAdd do: [ :account | self assertPortfolioDoesNotHave: account ].
	accountables add: anAccountable.
	anAccountable father: self."
	
	| rootPortfolios |
	
	rootPortfolios _ self rootPortfolios.
	
	accountables add: anAccountable.
	"anAccountable addFather: self."
	"accountableToAddAccounts _ anAccountable accounts."
	
	(rootPortfolios anySatisfy: [ :rootPortfolio || visitor |
		"newRootPortfolioAccounts _ rootPortfolio accounts.
		newRootPortfolioAccounts addAll: accountableToAddAccounts.
		nonRepeatedNewRootPortfolioAccounts _ newRootPortfolioAccounts asSet.
		newRootPortfolioAccounts size > nonRepeatedNewRootPortfolioAccounts size."
		visitor _ PortfolioVisitor new.
		visitor visit: rootPortfolio.
		]) ifTrue: [
			accountables remove: anAccountable.
			"anAccountable removeFather: self."
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			"accountables add: anAccountable."
			anAccountable addFather: self.
		].! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 13:13:09'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:13:09'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:13:09'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:13:09'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:13:09'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:13:09'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 13:13:09'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 13:13:09'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 13:13:09'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 13:13:09'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 13:13:09'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 13:13:09'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 13:13:09'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 13:13:09'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:13:09'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:13:09'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:13:09'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 13:13:09'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 13:13:09'!
PASSED!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 13:17:46' prior: 50877066!
test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio
	
	| portfolio account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	self should: [ portfolio addAccountable: account.
			portfolio addAccountable: account ]
		raise: Error
		withExceptionDo: [ self assert: 1 equals: portfolio accountables size ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.
	
	"self 
		should: [
			portfolio addAccountable: account.
			portfolio addAccountable: account ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription."

	
	! !

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:17:53'!
ERROR!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:17:53'!
ERROR!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 13:18:52' prior: 50880249!
test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio
	
	| portfolio account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	self should: [ portfolio addAccountable: account.
			portfolio addAccountable: account ]
		raise: Error
		withExceptionDo: [ :error | self assert: 1 equals: portfolio accountables size ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.
	
	"self 
		should: [
			portfolio addAccountable: account.
			portfolio addAccountable: account ]
		raise: Error
		withMessageText: Portfolio cantHaveRepeatedAccountsErrorDescription."

	
	! !

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:18:55'!
PASSED!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 13:19:21' prior: 50880279!
test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio
	
	| portfolio account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	self should: [ portfolio addAccountable: account.
			portfolio addAccountable: account ]
		raise: Error
		withExceptionDo: [ :error | self assert: 1 equals: portfolio accountables size ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.
	
	! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 13:19:38' prior: 50880305!
test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio
	
	| portfolio account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	
	self 
		should: [ portfolio addAccountable: account.
			portfolio addAccountable: account ]
		raise: Error
		withExceptionDo: [ :error | self assert: 1 equals: portfolio accountables size ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.
	
	! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 13:22:10' prior: 50877094!
test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio

	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: { account }.
	portfolio addAccountable: portfolio2.
	
	self 
		should: [ portfolio addAccountable: account ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: account)]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 13:22:15' prior: 50880337!
test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio

	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: { account }.
	portfolio addAccountable: portfolio2.
	
	self 
		should: [ portfolio addAccountable: account ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: account) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:22:18'!
PASSED!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 13:23:05' prior: 50877495!
test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: { account }.
	portfolio addAccountable: account.
	
	self 
		should: [ portfolio addAccountable: portfolio2. ]
		raise: Error
		withExceptionDo: [ :error | self ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 13:23:19' prior: 50880380!
test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: { account }.
	portfolio addAccountable: account.
	
	self 
		should: [ portfolio addAccountable: portfolio2. ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: account) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:23:23'!
FAILURE!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:23:23'!
FAILURE!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 13:23:36' prior: 50880398!
test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount
	| portfolio portfolio2 account|
	
	portfolio _ Portfolio new.
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: { account }.
	portfolio addAccountable: account.
	
	self 
		should: [ portfolio addAccountable: portfolio2. ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: portfolio2) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:23:39'!
PASSED!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 13:24:17' prior: 50877990!
test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount
	| porfolioRoot portfolioToAdd portfolio account|
	
	account _ self accountWithBalance50.
	portfolio _ Portfolio new.
	porfolioRoot _ self portfolioWith: { account. portfolio }.
	portfolioToAdd _ self portfolioWith: { account }.
	
	self 
		should: [ portfolio addAccountable: portfolioToAdd. ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: portfolioToAdd) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 13:24:37'!
PASSED!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 13:25:07' prior: 50879253!
test19ShouldFailWhenAddingAnEmptyPortfolioToItself
	| portfolio |
	
	portfolio _ Portfolio new.
	
	self 
		should: [ portfolio addAccountable: portfolio. ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: portfolio) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 13:25:12'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 13:25:15'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:25:15'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:25:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:25:15'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:25:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:25:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 13:25:15'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 13:25:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 13:25:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 13:25:15'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 13:25:15'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 13:25:15'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 13:25:15'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 13:25:15'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:25:15'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:25:15'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:25:15'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 13:25:15'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 13:25:15'!
PASSED!

----SNAPSHOT----(23 May 2021 13:26:14) Portfolio.image priorSource: 17468560!

!methodRemoval: Portfolio #assertPortfolioDoesNotHave: stamp: 'JPF 5/23/2021 13:27:10'!
assertPortfolioDoesNotHave: accountableToAdd

	^ (self includes: accountableToAdd)	
		ifTrue: [self error: self class cantHaveRepeatedAccountsErrorDescription ]!

!methodRemoval: Portfolio #includes: stamp: 'JPF 5/23/2021 13:28:29'!
includes: anAccount
	
	^ accountables anySatisfy: [ :accountable | accountable == anAccount or: [ accountable includes: anAccount ]].!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 13:28:33'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:28:33'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:28:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:28:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:28:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:28:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 13:28:33'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 13:28:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 13:28:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 13:28:33'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 13:28:33'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 13:28:33'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 13:28:33'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 13:28:33'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:28:33'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:28:33'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:28:33'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 13:28:33'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 13:28:33'!
PASSED!

!methodRemoval: Accountable #includes: stamp: 'JPF 5/23/2021 13:28:43'!
includes: accountable
	
	self subclassResponsibility!

!methodRemoval: Portfolio #accounts stamp: 'JPF 5/23/2021 13:29:24'!
accounts
	
	^ accountables inject: OrderedCollection new into: [ :accounts :accountable || accountsToAdd |
		accountsToAdd := accountable accounts.
		accounts addAll: accountsToAdd.
		accounts.
		 ].
	
	"^ accountables inject: OrderedCollection new
		into: [ :accounts :accountable |
			accountable addAccountsTo: accounts.
			accounts. ]"!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 13:29:29'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:29:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:29:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:29:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:29:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:29:29'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 13:29:29'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 13:29:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 13:29:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 13:29:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 13:29:29'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 13:29:29'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 13:29:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 13:29:29'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:29:29'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:29:29'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:29:29'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 13:29:29'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 13:29:29'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 13:30:35' prior: 50880133!
addAccountable: anAccountable
	
	| rootPortfolios |
	
	rootPortfolios _ self rootPortfolios.
	
	accountables add: anAccountable.
	
	(rootPortfolios anySatisfy: [ :rootPortfolio || visitor |
		visitor _ PortfolioVisitor new.
		visitor visit: rootPortfolio.
		]) ifTrue: [
			accountables remove: anAccountable.
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			anAccountable addFather: self.
		].! !
!Accountable methodsFor: 'father portfolios' stamp: 'JPF 5/23/2021 13:32:40' prior: 50878399!
rootPortfolios

	| rootPortfolios |
	rootPortfolios _ OrderedCollection new.
	
	fathers 
		ifEmpty: [ rootPortfolios add: self ] 
		ifNotEmpty: [ ^ fathers do: [ :fatherPortfolio |
			rootPortfolios addAll: fatherPortfolio rootPortfolios.
		]].

	^ rootPortfolios
	
	! !

collection _ OrderedCollection new.!

collection add: 1!
!Accountable methodsFor: 'father portfolios' stamp: 'JPF 5/23/2021 13:37:01' prior: 50880785!
rootPortfolios

	| rootPortfolios |
	rootPortfolios _ OrderedCollection new.
	
	"fathers 
		ifEmpty: [ rootPortfolios add: self ] 
		ifNotEmpty: [ ^ fathers do: [ :fatherPortfolio |
			rootPortfolios addAll: fatherPortfolio rootPortfolios.
		]]."
	fathers do: [ :fatherPortfolio |
			rootPortfolios addAll: fatherPortfolio rootPortfolios.
		] without: [rootPortfolios add: self ] .

	^ rootPortfolios
	
	! !
!Accountable methodsFor: 'father portfolios' stamp: 'JPF 5/23/2021 13:37:16' prior: 50880799!
rootPortfolios

	| rootPortfolios |
	rootPortfolios _ OrderedCollection new.
	
	"fathers 
		ifEmpty: [ rootPortfolios add: self ] 
		ifNotEmpty: [ ^ fathers do: [ :fatherPortfolio |
			rootPortfolios addAll: fatherPortfolio rootPortfolios.
		]]."
	fathers do: [ :fatherPortfolio |
			rootPortfolios addAll: fatherPortfolio rootPortfolios.
		] without: [ rootPortfolios add: self ] .

	^ rootPortfolios
	
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 13:37:19'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:37:19'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:37:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:37:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:37:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:37:19'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 13:37:19'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 13:37:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 13:37:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 13:37:19'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 13:37:19'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 13:37:19'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 13:37:19'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 13:37:19'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:37:19'!
FAILURE!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:37:19'!
FAILURE!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:37:19'!
FAILURE!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 13:37:19'!
FAILURE!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 13:37:19'!
FAILURE!
!Accountable methodsFor: 'father portfolios' stamp: 'JPF 5/23/2021 13:37:58' prior: 50880815!
rootPortfolios

	| rootPortfolios |
	rootPortfolios _ OrderedCollection new.
	
	fathers 
		ifEmpty: [ rootPortfolios add: self ] 
		ifNotEmpty: [ ^ fathers do: [ :fatherPortfolio |
			rootPortfolios addAll: fatherPortfolio rootPortfolios.
		]].

	^ rootPortfolios
	
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 13:38:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:38:05'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:38:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:38:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:38:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:38:05'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 13:38:05'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 13:38:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 13:38:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 13:38:05'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 13:38:05'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 13:38:05'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 13:38:05'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 13:38:05'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:38:05'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:38:05'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:38:05'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 13:38:05'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 13:38:05'!
PASSED!
!Accountable methodsFor: 'father portfolios' stamp: 'JPF 5/23/2021 13:38:23' prior: 50880911!
rootPortfolios

	| rootPortfolios |
	
	rootPortfolios _ OrderedCollection new.
	
	fathers 
		ifEmpty: [ rootPortfolios add: self ] 
		ifNotEmpty: [ ^ fathers do: [ :fatherPortfolio |
			rootPortfolios addAll: fatherPortfolio rootPortfolios.
		]].

	^ rootPortfolios
	
	! !
!PortfolioVisitor methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 13:41:55'!
visitAccount: anAccount
	
	(visited includes: anAccount)
		ifTrue: [ hasRepeatedNodes _ true ]
		ifFalse: [ visited add: anAccount ].
	! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 13:41:55' prior: 50879357!
accept: visitor
	
	visitor visitAccount: self.! !

!methodRemoval: PortfolioVisitor #doForAccount: stamp: 'JPF 5/23/2021 13:41:55'!
doForAccount: anAccount
	
	(visited includes: anAccount)
		ifTrue: [ hasRepeatedNodes _ true ]
		ifFalse: [ visited add: anAccount ].
	!
!PortfolioVisitor methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 13:42:29'!
visitPortfolio: aPortfolio
	
	(visited includes: aPortfolio)
		ifTrue: [ hasRepeatedNodes _ true ]
		ifFalse: [ 
			visited add: aPortfolio.
			aPortfolio accountables do: [ :accountable | accountable accept: self ]
			].
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 13:42:29' prior: 50879429!
accept: visitor
	
	visitor visitPortfolio: self.! !

!methodRemoval: PortfolioVisitor #doForPortfolio: stamp: 'JPF 5/23/2021 13:42:29'!
doForPortfolio: aPortfolio
	
	(visited includes: aPortfolio)
		ifTrue: [ hasRepeatedNodes _ true ]
		ifFalse: [ 
			visited add: aPortfolio.
			aPortfolio accountables do: [ :accountable | accountable accept: self ]
			].
	!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 13:42:33'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:42:33'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:42:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:42:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:42:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:42:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 13:42:33'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 13:42:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 13:42:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 13:42:33'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 13:42:33'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 13:42:33'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 13:42:33'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 13:42:33'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:42:33'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:42:33'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:42:33'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 13:42:33'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 13:42:33'!
PASSED!

!classRenamed: #PortfolioVisitor as: #HasRepeatedNodesPortfolioVisitor stamp: 'JPF 5/23/2021 13:43:37'!
Smalltalk renameClassNamed: #PortfolioVisitor as: #HasRepeatedNodesPortfolioVisitor!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 13:43:37' prior: 50880768!
addAccountable: anAccountable
	
	| rootPortfolios |
	
	rootPortfolios _ self rootPortfolios.
	
	accountables add: anAccountable.
	
	(rootPortfolios anySatisfy: [ :rootPortfolio || visitor |
		visitor _ HasRepeatedNodesPortfolioVisitor new.
		visitor visit: rootPortfolio.
		]) ifTrue: [
			accountables remove: anAccountable.
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			anAccountable addFather: self.
		].! !

!classRenamed: #HasRepeatedNodesPortfolioVisitor as: #HasRepeatedNodesAccountableVisitor stamp: 'JPF 5/23/2021 13:44:35'!
Smalltalk renameClassNamed: #HasRepeatedNodesPortfolioVisitor as: #HasRepeatedNodesAccountableVisitor!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 13:44:35' prior: 50881145!
addAccountable: anAccountable
	
	| rootPortfolios |
	
	rootPortfolios _ self rootPortfolios.
	
	accountables add: anAccountable.
	
	(rootPortfolios anySatisfy: [ :rootPortfolio || visitor |
		visitor _ HasRepeatedNodesAccountableVisitor new.
		visitor visit: rootPortfolio.
		]) ifTrue: [
			accountables remove: anAccountable.
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			anAccountable addFather: self.
		].! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 13:44:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:44:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:44:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:44:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:44:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:44:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 13:44:45'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 13:44:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 13:44:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 13:44:45'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 13:44:45'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 13:44:45'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 13:44:45'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 13:44:45'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:44:45'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:44:45'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:44:45'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 13:44:45'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 13:44:45'!
PASSED!

!classRenamed: #HasRepeatedNodesAccountableVisitor as: #AccountableVisitor stamp: 'JPF 5/23/2021 13:46:39'!
Smalltalk renameClassNamed: #HasRepeatedNodesAccountableVisitor as: #AccountableVisitor!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 13:46:39' prior: 50881170!
addAccountable: anAccountable
	
	| rootPortfolios |
	
	rootPortfolios _ self rootPortfolios.
	
	accountables add: anAccountable.
	
	(rootPortfolios anySatisfy: [ :rootPortfolio || visitor |
		visitor _ AccountableVisitor new.
		visitor visit: rootPortfolio.
		]) ifTrue: [
			accountables remove: anAccountable.
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			anAccountable addFather: self.
		].! !
!AccountableVisitor methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 13:47:12'!
hasRepeatedNodes: aPortfolio
	
	aPortfolio accept: self.
	^ hasRepeatedNodes.! !

!methodRemoval: AccountableVisitor #visit: stamp: 'JPF 5/23/2021 13:47:12'!
visit: aPortfolio
	
	aPortfolio accept: self.
	^ hasRepeatedNodes.!
!AccountableVisitor methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 13:47:23' prior: 50881290!
hasRepeatedNodes: anAccountable
	
	anAccountable accept: self.
	^ hasRepeatedNodes.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 13:47:28'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:47:29'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:47:29'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:47:29'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:47:29'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:47:29'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 13:47:29'!
ERROR!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 13:47:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 13:47:29'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 13:47:29'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 13:47:29'!
ERROR!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 13:47:29'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 13:47:29'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 13:47:29'!
ERROR!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:47:29'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:47:29'!
ERROR!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:47:29'!
ERROR!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 13:47:29'!
ERROR!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 13:47:29'!
FAILURE!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 13:47:39'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:47:39'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:47:39'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:47:39'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:47:39'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:47:39'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 13:47:39'!
ERROR!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 13:47:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 13:47:39'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 13:47:39'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 13:47:39'!
ERROR!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 13:47:39'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 13:47:39'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 13:47:39'!
ERROR!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:47:39'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:47:39'!
ERROR!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:47:39'!
ERROR!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 13:47:39'!
ERROR!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 13:47:39'!
FAILURE!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:47:41'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 13:48:07' prior: 50881273!
addAccountable: anAccountable
	
	| rootPortfolios |
	
	rootPortfolios _ self rootPortfolios.
	
	accountables add: anAccountable.
	
	(rootPortfolios anySatisfy: [ :rootPortfolio || visitor |
		visitor _ AccountableVisitor new.
		visitor hasRepeatedNodes: rootPortfolio.
		]) ifTrue: [
			accountables remove: anAccountable.
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			anAccountable addFather: self.
		].! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 13:48:12'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:48:12'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:48:12'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:48:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:48:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:48:12'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 13:48:12'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 13:48:12'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 13:48:12'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 13:48:12'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 13:48:12'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 13:48:12'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 13:48:12'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 13:48:12'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:48:12'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:48:12'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:48:12'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 13:48:12'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 13:48:12'!
PASSED!

!methodRemoval: ReceptiveAccount #includes: stamp: 'JPF 5/23/2021 13:51:32'!
includes: anAccount
	
	^ false.!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 13:51:34'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:51:34'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:51:34'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:51:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:51:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:51:34'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 13:51:34'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 13:51:34'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 13:51:34'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 13:51:34'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 13:51:34'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 13:51:34'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 13:51:34'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 13:51:34'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:51:34'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:51:34'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:51:34'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 13:51:34'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 13:51:34'!
PASSED!

!methodRemoval: ReceptiveAccount #accounts stamp: 'JPF 5/23/2021 13:52:14'!
accounts
	
	^ OrderedCollection with: self.!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 13:52:17'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:52:17'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:52:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:52:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:52:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:52:17'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 13:52:17'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 13:52:17'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 13:52:17'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 13:52:17'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 13:52:17'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 13:52:17'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 13:52:17'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 13:52:17'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:52:17'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:52:17'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:52:17'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 13:52:17'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 13:52:17'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'JPF 5/23/2021 13:52:44' prior: 50875207 overrides: 50876001!
balance

	^ transactions inject: 0 into: [ :partialBalance :aTransaction | aTransaction addToBalance: partialBalance ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'JPF 5/23/2021 13:52:51' prior: 50881733 overrides: 50876001!
balance

	^ transactions inject: 0 into: [ :partialBalance :aTransaction |
		aTransaction addToBalance: partialBalance ]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 13:52:59'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:52:59'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:52:59'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 13:52:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:52:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 13:52:59'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 13:52:59'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 13:52:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 13:52:59'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 13:52:59'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 13:52:59'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 13:52:59'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 13:52:59'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 13:52:59'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 13:52:59'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 13:52:59'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 13:52:59'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 13:52:59'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 13:52:59'!
PASSED!

!classRenamed: #AccountableVisitor as: #RepeatedAccountablesVisitor stamp: 'JPF 5/23/2021 19:41:29'!
Smalltalk renameClassNamed: #AccountableVisitor as: #RepeatedAccountablesVisitor!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 19:41:29' prior: 50881469!
addAccountable: anAccountable
	
	| rootPortfolios |
	
	rootPortfolios _ self rootPortfolios.
	
	accountables add: anAccountable.
	
	(rootPortfolios anySatisfy: [ :rootPortfolio || visitor |
		visitor _ RepeatedAccountablesVisitor new.
		visitor hasRepeatedNodes: rootPortfolio.
		]) ifTrue: [
			accountables remove: anAccountable.
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			anAccountable addFather: self.
		].! !
!RepeatedAccountablesVisitor methodsFor: 'repeated nodes' stamp: 'JPF 5/23/2021 19:42:53'!
hasRepeatedAccountables: anAccountable
	
	anAccountable accept: self.
	^ hasRepeatedNodes.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 19:42:53' prior: 50881834!
addAccountable: anAccountable
	
	| rootPortfolios |
	
	rootPortfolios _ self rootPortfolios.
	
	accountables add: anAccountable.
	
	(rootPortfolios anySatisfy: [ :rootPortfolio || visitor |
		visitor _ RepeatedAccountablesVisitor new.
		visitor hasRepeatedAccountables: rootPortfolio.
		]) ifTrue: [
			accountables remove: anAccountable.
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			anAccountable addFather: self.
		].! !

!methodRemoval: RepeatedAccountablesVisitor #hasRepeatedNodes: stamp: 'JPF 5/23/2021 19:42:53'!
hasRepeatedNodes: anAccountable
	
	anAccountable accept: self.
	^ hasRepeatedNodes.!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 19:43:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 19:43:05'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:43:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 19:43:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:43:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:43:05'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 19:43:05'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 19:43:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 19:43:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 19:43:05'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 19:43:05'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 19:43:05'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 19:43:05'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 19:43:05'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 19:43:05'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 19:43:05'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 19:43:05'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 19:43:05'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 19:43:05'!
PASSED!

Object subclass: #TransactionsVisitor
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #TransactionsVisitor category: #'Portfolio-Ejercicio' stamp: 'JPF 5/23/2021 19:44:41'!
Object subclass: #TransactionsVisitor
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #TransactionsVisitor stamp: 'JPF 5/23/2021 19:45:41'!
Object subclass: #TransactionsVisitor
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 19:45:44'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 19:45:44'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:45:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 19:45:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:45:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:45:44'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 19:45:44'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 19:45:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 19:45:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 19:45:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 19:45:44'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 19:45:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 19:45:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 19:45:44'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 19:45:44'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 19:45:44'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 19:45:44'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 19:45:44'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 19:45:44'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 19:45:47'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 19:45:47'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:45:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 19:45:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:45:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:45:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 19:45:47'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 19:45:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 19:45:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 19:45:47'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 19:45:47'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 19:45:47'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 19:45:47'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 19:45:47'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 19:45:47'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 19:45:47'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 19:45:47'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 19:45:47'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 19:45:47'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 19:45:48'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 19:45:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:45:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 19:45:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:45:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:45:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 19:45:48'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 19:45:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 19:45:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 19:45:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 19:45:48'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 19:45:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 19:45:48'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 19:45:48'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 19:45:48'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 19:45:48'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 19:45:48'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 19:45:48'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 19:45:48'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 19:46:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 19:46:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:46:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 19:46:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:46:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:46:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 19:46:10'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 19:46:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 19:46:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 19:46:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 19:46:10'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 19:46:10'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 19:46:10'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 19:46:10'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 19:46:10'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 19:46:10'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 19:46:10'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 19:46:10'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 19:46:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JPF 5/23/2021 19:46:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JPF 5/23/2021 19:46:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JPF 5/23/2021 19:46:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JPF 5/23/2021 19:46:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JPF 5/23/2021 19:46:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JPF 5/23/2021 19:46:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JPF 5/23/2021 19:46:23'!
PASSED!
!Accountable methodsFor: 'father portfolios' stamp: 'JPF 5/23/2021 19:48:38'!
addToPortfolio: aPortfolio
	
	fathers add: aPortfolio! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 19:48:38' prior: 50881858!
addAccountable: anAccountable
	
	| rootPortfolios |
	
	rootPortfolios _ self rootPortfolios.
	
	accountables add: anAccountable.
	
	(rootPortfolios anySatisfy: [ :rootPortfolio || visitor |
		visitor _ RepeatedAccountablesVisitor new.
		visitor hasRepeatedAccountables: rootPortfolio.
		]) ifTrue: [
			accountables remove: anAccountable.
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			anAccountable addToPortfolio: self.
		].! !

!methodRemoval: Accountable #addFather: stamp: 'JPF 5/23/2021 19:48:38'!
addFather: aPortfolio
	
	fathers add: aPortfolio!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 19:49:09'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 19:49:09'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:49:09'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 19:49:09'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:49:09'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:49:09'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 19:49:09'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 19:49:09'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 19:49:09'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 19:49:09'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 19:49:09'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 19:49:09'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 19:49:09'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 19:49:09'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 19:49:09'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 19:49:09'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 19:49:09'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 19:49:09'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 19:49:09'!
PASSED!

!classDefinition: #Accountable category: #'Portfolio-Ejercicio' stamp: 'JPF 5/23/2021 19:49:49'!
Object subclass: #Accountable
	instanceVariableNames: 'fatherPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Accountable methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 19:49:49' prior: 50878334!
fathers
	
	^ fatherPortfolios! !
!Accountable methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 19:49:49' prior: 50882326!
addToPortfolio: aPortfolio
	
	fatherPortfolios add: aPortfolio! !
!Accountable methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 19:49:49' prior: 50878318!
removeFather: aPortfolio
	
	fatherPortfolios removeFirst: aPortfolio! !
!Accountable methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 19:49:49' prior: 50881002!
rootPortfolios

	| rootPortfolios |
	
	rootPortfolios _ OrderedCollection new.
	
	fatherPortfolios 
		ifEmpty: [ rootPortfolios add: self ] 
		ifNotEmpty: [ ^ fatherPortfolios do: [ :fatherPortfolio |
			rootPortfolios addAll: fatherPortfolio rootPortfolios.
		]].

	^ rootPortfolios
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 19:49:49' prior: 50878247 overrides: 16896425!
initialize

	accountables _ OrderedCollection new.
	fatherPortfolios _ OrderedCollection new.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 19:49:49' prior: 50878254 overrides: 16896425!
initialize

	transactions _ OrderedCollection new.
	fatherPortfolios _ OrderedCollection new.! !
!Accountable methodsFor: 'father portfolios' stamp: 'JPF 5/23/2021 19:50:18'!
removeFrom: aPortfolio
	
	fatherPortfolios removeFirst: aPortfolio! !

!methodRemoval: Accountable #removeFather: stamp: 'JPF 5/23/2021 19:50:18'!
removeFather: aPortfolio
	
	fatherPortfolios removeFirst: aPortfolio!
!Accountable methodsFor: 'father portfolios' stamp: 'JPF 5/23/2021 19:50:41'!
addTo: aPortfolio
	
	fatherPortfolios add: aPortfolio! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 19:50:41' prior: 50882331!
addAccountable: anAccountable
	
	| rootPortfolios |
	
	rootPortfolios _ self rootPortfolios.
	
	accountables add: anAccountable.
	
	(rootPortfolios anySatisfy: [ :rootPortfolio || visitor |
		visitor _ RepeatedAccountablesVisitor new.
		visitor hasRepeatedAccountables: rootPortfolio.
		]) ifTrue: [
			accountables remove: anAccountable.
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			anAccountable addTo: self.
		].! !

!methodRemoval: Accountable #addToPortfolio: stamp: 'JPF 5/23/2021 19:50:41'!
addToPortfolio: aPortfolio
	
	fatherPortfolios add: aPortfolio!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 19:50:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 19:50:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:50:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 19:50:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:50:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:50:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 19:50:45'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 19:50:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 19:50:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 19:50:45'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 19:50:45'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 19:50:45'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 19:50:45'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 19:50:45'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 19:50:45'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 19:50:45'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 19:50:45'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 19:50:45'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 19:50:45'!
PASSED!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'JPF 5/23/2021 19:53:04' prior: 50874553!
test03PortfolioWithTwoAccountsWithBalance50HasBalance100
	
	| portfolio |
	
	portfolio _ self portfolioWith: { self accountWithBalance50. self accountWithBalance50}.
	portfolio _ Portfolio new.
	portfolio addAccountable: self accountWithBalance50.
	portfolio addAccountable: self accountWithBalance50.
	
	self assert: 100 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'JPF 5/23/2021 19:53:13' prior: 50882600!
test03PortfolioWithTwoAccountsWithBalance50HasBalance100
	
	| portfolio |
	
	portfolio _ self portfolioWith: { self accountWithBalance50. self accountWithBalance50}.
	"portfolio _ Portfolio new.
	portfolio addAccountable: self accountWithBalance50.
	portfolio addAccountable: self accountWithBalance50."
	
	self assert: 100 equals: portfolio balance.! !

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:53:16'!
PASSED!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'JPF 5/23/2021 19:53:25' prior: 50882614!
test03PortfolioWithTwoAccountsWithBalance50HasBalance100
	
	| portfolio |
	
	portfolio _ self portfolioWith: { self accountWithBalance50. self accountWithBalance50}.
	
	self assert: 100 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'JPF 5/23/2021 19:54:15' prior: 50874513!
test04PortfolioWithOnePortfolioWithBalance50HasBalance50
	
	| portfolio |
	
	portfolio _ self portfolioWith: {self portfolioWithBalance50}.
	
	self assert: 50 equals: portfolio balance.! !

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 19:54:19'!
PASSED!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'JPF 5/23/2021 19:55:27' prior: 50874523!
test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100
	
	| portfolio |
	
	portfolio _ self portfolioWith: {self portfolioWithBalance50. self portfolioWithBalance50}.
	"portfolio _ Portfolio new.
	portfolio addAccountable: (self portfolioWithBalance50).
	portfolio addAccountable: (self portfolioWithBalance50)."
	
	self assert: 100 equals: portfolio balance.! !

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:55:29'!
PASSED!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'JPF 5/23/2021 19:55:36' prior: 50882655!
test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100
	
	| portfolio |
	
	portfolio _ self portfolioWith: {self portfolioWithBalance50. self portfolioWithBalance50}.

	self assert: 100 equals: portfolio balance.! !

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 19:55:39'!
PASSED!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'JPF 5/23/2021 19:56:11' prior: 50874565!
test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100
	
	| portfolio |
	
	portfolio _ self portfolioWith: {self portfolioWithBalance50. self accountWithBalance50}.
	
	self assert: 100 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'JPF 5/23/2021 19:57:24' prior: 50874497!
test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200
	
	| portfolio |
	
	portfolio _ self portfolioWith: {
		self portfolioWithBalance50.
		self portfolioWithBalance50.
		self accountWithBalance50.
		self accountWithBalance50
	}.
	
	self assert: 200 equals: portfolio balance.! !

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 19:57:27'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 19:57:30'!
PASSED!
!PortfolioTest methodsFor: 'assertions' stamp: 'JPF 5/23/2021 19:59:27'!
assertHasOnly: transactions
	
	! !
!PortfolioTest methodsFor: 'assertions' stamp: 'JPF 5/23/2021 20:00:59'!
assert: portfolio HasOnly: transactions
	
	! !
!PortfolioTest methodsFor: 'assertions' stamp: 'JPF 5/23/2021 20:01:03'!
assert: portfolio hasOnly: transactions
	
	! !

!methodRemoval: PortfolioTest #assertHasOnly: stamp: 'JPF 5/23/2021 20:01:08'!
assertHasOnly: transactions
	
	!

!methodRemoval: PortfolioTest #assert:HasOnly: stamp: 'JPF 5/23/2021 20:01:09'!
assert: portfolio HasOnly: transactions
	
	!
!PortfolioTest methodsFor: 'assertions' stamp: 'JPF 5/23/2021 20:01:25' prior: 50882727!
assert: aPortfolio hasOnly: transactions
	
	! !
!PortfolioTest methodsFor: 'assertions' stamp: 'JPF 5/23/2021 20:03:06' prior: 50882739!
assert: aPortfolio hasOnly: transactions
	
	self assert: transactions size equals: aPortfolio transactions size.
	transactions do: [ :transaction | self assert: (aPortfolio transactions includes: transaction)].
	! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'JPF 5/23/2021 20:04:01' prior: 50875292!
test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction
	
	| portfolio transaction account |
	
	portfolio _ Portfolio new.
	transaction _ self a50Deposit.
	account _ self accountWith: { transaction }.
	portfolio addAccountable: account.
	
	self assert: 1 equals: portfolio transactions size.
	self assert: (portfolio transactions includes: transaction).
	
	self assert: portfolio hasOnly: {transaction}.
	! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'JPF 5/23/2021 20:04:08' prior: 50882754!
test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction
	
	| portfolio transaction account |
	
	portfolio _ Portfolio new.
	transaction _ self a50Deposit.
	account _ self accountWith: { transaction }.
	portfolio addAccountable: account.
	
	"self assert: 1 equals: portfolio transactions size.
	self assert: (portfolio transactions includes: transaction)."
	
	self assert: portfolio hasOnly: {transaction}.
	! !

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 20:04:10'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'JPF 5/23/2021 20:04:23' prior: 50882771!
test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction
	
	| portfolio transaction account |
	
	portfolio _ Portfolio new.
	transaction _ self a50Deposit.
	account _ self accountWith: { transaction }.
	portfolio addAccountable: account.
	
	self assert: portfolio hasOnly: {transaction}.
	! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'JPF 5/23/2021 20:04:28' prior: 50882792!
test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction
	
	| portfolio transaction account |
	
	portfolio _ Portfolio new.
	transaction _ self a50Deposit.
	account _ self accountWith: { transaction }.
	portfolio addAccountable: account.
	
	self assert: portfolio hasOnly: { transaction }.
	! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'JPF 5/23/2021 20:05:35' prior: 50875141!
test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions
	
	| portfolio transaction1 transaction2 account1 account2 |
	
	portfolio _ Portfolio new.
	
	transaction1 _ self a50Deposit.
	account1 _ self accountWith: { transaction1 }.
	
	transaction2 _ self a50Deposit.
	account2 _ self accountWith: { transaction2 }.
	
	portfolio addAccountable: account1.
	portfolio addAccountable: account2.
	
	self assert: portfolio hasOnly: { transaction1. transaction2 }.
	self assert: 2 equals: portfolio transactions size.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'JPF 5/23/2021 20:05:42' prior: 50882818!
test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions
	
	| portfolio transaction1 transaction2 account1 account2 |
	
	portfolio _ Portfolio new.
	
	transaction1 _ self a50Deposit.
	account1 _ self accountWith: { transaction1 }.
	
	transaction2 _ self a50Deposit.
	account2 _ self accountWith: { transaction2 }.
	
	portfolio addAccountable: account1.
	portfolio addAccountable: account2.
	
	self assert: portfolio hasOnly: { transaction1. transaction2 }.
	"self assert: 2 equals: portfolio transactions size.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2)."! !

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 20:05:44'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'JPF 5/23/2021 20:06:34' prior: 50882842!
test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions
	
	| portfolio transaction1 transaction2 account1 account2 |
	
	"portfolio _ Portfolio new."
	
	transaction1 _ self a50Deposit.
	account1 _ self accountWith: { transaction1 }.
	
	transaction2 _ self a50Deposit.
	account2 _ self accountWith: { transaction2 }.
	
	"portfolio addAccountable: account1.
	portfolio addAccountable: account2."
	
	portfolio _ self portfolioWith: { account1. account2 }.
	
	self assert: portfolio hasOnly: { transaction1. transaction2 }.! !

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 20:06:40'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'JPF 5/23/2021 20:06:56' prior: 50882871!
test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions
	
	| portfolio transaction1 transaction2 account1 account2 |
	
	transaction1 _ self a50Deposit.
	account1 _ self accountWith: { transaction1 }.
	
	transaction2 _ self a50Deposit.
	account2 _ self accountWith: { transaction2 }.
	
	portfolio _ self portfolioWith: { account1. account2 }.
	
	self assert: portfolio hasOnly: { transaction1. transaction2 }.! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'JPF 5/23/2021 20:08:24' prior: 50875488!
test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions
	
	| portfolio portfolio1 portfolio2 
		transaction1 transaction2 transaction3 transaction4
		account1 account2 |
	
	"portfolio _ Portfolio new."
	
	transaction1 _ self a50Deposit.
	transaction2 _ self a50Withdraw.
	account1 _ self accountWith: { transaction1. transaction2}.
	portfolio1 _ self portfolioWith: { account1 }.
	
	transaction3 _ self a50Deposit.
	transaction4 _ self a50Withdraw.
	account2 _ self accountWith: { transaction3. transaction4}.
	portfolio2 _ self portfolioWith: { account2 }.
	
	"portfolio addAccountable: portfolio1.
	portfolio addAccountable: portfolio2."
	portfolio _ self portfolioWith: { portfolio1. portfolio2 }.
	
	"self assert: 4 equals: portfolio transactions size.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	self assert: (portfolio transactions includes: transaction3).
	self assert: (portfolio transactions includes: transaction4)."! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'JPF 5/23/2021 20:10:17' prior: 50882913!
test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions
	
	| portfolio portfolio1 portfolio2 
		transaction1 transaction2 transaction3 transaction4
		account1 account2 |
	
	"portfolio _ Portfolio new."
	
	transaction1 _ self a50Deposit.
	transaction2 _ self a50Withdraw.
	account1 _ self accountWith: { transaction1. transaction2}.
	portfolio1 _ self portfolioWith: { account1 }.
	
	transaction3 _ self a50Deposit.
	transaction4 _ self a50Withdraw.
	account2 _ self accountWith: { transaction3. transaction4}.
	portfolio2 _ self portfolioWith: { account2 }.
	
	"portfolio addAccountable: portfolio1.
	portfolio addAccountable: portfolio2."
	portfolio _ self portfolioWith: { portfolio1. portfolio2 }.
	
	self assert: portfolio 
		hasOnly: { 	transaction1. 	transaction2. 		transaction3. 	transaction4 	}
	
	"self assert: 4 equals: portfolio transactions size.
	self assert: (portfolio transactions includes: transaction1).
	self assert: (portfolio transactions includes: transaction2).
	self assert: (portfolio transactions includes: transaction3).
	self assert: (portfolio transactions includes: transaction4)."! !

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 20:10:20'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 20:10:20'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 20:10:20'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:10:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 20:10:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:10:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:10:20'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 20:10:20'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 20:10:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 20:10:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 20:10:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 20:10:20'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 20:10:20'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 20:10:20'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 20:10:20'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 20:10:20'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 20:10:20'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 20:10:20'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 20:10:20'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 20:10:20'!
PASSED!
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'JPF 5/23/2021 20:10:34' prior: 50882949!
test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions
	
	| portfolio portfolio1 portfolio2 
		transaction1 transaction2 transaction3 transaction4
		account1 account2 |
	
	"portfolio _ Portfolio new."
	
	transaction1 _ self a50Deposit.
	transaction2 _ self a50Withdraw.
	account1 _ self accountWith: { transaction1. transaction2}.
	portfolio1 _ self portfolioWith: { account1 }.
	
	transaction3 _ self a50Deposit.
	transaction4 _ self a50Withdraw.
	account2 _ self accountWith: { transaction3. transaction4}.
	portfolio2 _ self portfolioWith: { account2 }.
	
	portfolio _ self portfolioWith: { portfolio1. portfolio2 }.
	
	self assert: portfolio 
		hasOnly: { 	transaction1. 	transaction2. 		transaction3. 	transaction4 	}! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'JPF 5/23/2021 20:10:45' prior: 50883072!
test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions
	
	| portfolio portfolio1 portfolio2 
		transaction1 transaction2 transaction3 transaction4
		account1 account2 |
	
	"portfolio _ Portfolio new."
	
	transaction1 _ self a50Deposit.
	transaction2 _ self a50Withdraw.
	account1 _ self accountWith: { transaction1. transaction2 }.
	portfolio1 _ self portfolioWith: { account1 }.
	
	transaction3 _ self a50Deposit.
	transaction4 _ self a50Withdraw.
	account2 _ self accountWith: { transaction3. transaction4 }.
	portfolio2 _ self portfolioWith: { account2 }.
	
	portfolio _ self portfolioWith: { portfolio1. portfolio2 }.
	
	self assert: portfolio 
		hasOnly: { 	transaction1. 	transaction2. 		transaction3. 	transaction4 	}! !
!PortfolioTest methodsFor: 'assertions' stamp: 'JPF 5/23/2021 20:12:02'!
assert: aPortfolio hasRegistered: transactions
	
	transactions do: [ :transaction | self assert: (aPortfolio hasRegistered: transaction) ]
	! !
!PortfolioTest methodsFor: 'assertions' stamp: 'JPF 5/23/2021 20:12:13' prior: 50882744!
assert: aPortfolio hasOnly: transactions
	
	self assert: transactions size equals: aPortfolio transactions size.
	transactions do: [ :transaction | self assert: (aPortfolio transactions includes: transaction) ]
	! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'JPF 5/23/2021 20:13:52' prior: 50875716!
test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions
	
	| portfolio portfolio1 portfolio2 
		transaction1 transaction2 transaction3 transaction4
		account1 account2 |
	
	portfolio _ Portfolio new.
	
	transaction1 _ self a50Deposit.
	transaction2 _ self a50Withdraw.
	account1 _ self accountWith: { transaction1. transaction2}.
	portfolio1 _ self portfolioWith: { account1 }.
	
	transaction3 _ self a50Deposit.
	transaction4 _ self a50Withdraw.
	account2 _ self accountWith: { transaction3. transaction4}.
	portfolio2 _ self portfolioWith: { account2 }.
	
	portfolio addAccountable: portfolio1.
	portfolio addAccountable: portfolio2.
	
	self assert: portfolio
		hasRegistered: { transaction1. transaction2. transaction3. transaction4 }! !
!PortfolioTest methodsFor: 'tests - transactions' stamp: 'JPF 5/23/2021 20:14:29' prior: 50883143!
test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions
	
	| portfolio portfolio1 portfolio2 
		transaction1 transaction2 transaction3 transaction4
		account1 account2 |
	
	transaction1 _ self a50Deposit.
	transaction2 _ self a50Withdraw.
	account1 _ self accountWith: { transaction1. transaction2}.
	portfolio1 _ self portfolioWith: { account1 }.
	
	transaction3 _ self a50Deposit.
	transaction4 _ self a50Withdraw.
	account2 _ self accountWith: { transaction3. transaction4}.
	portfolio2 _ self portfolioWith: { account2 }.
	
	portfolio _ self portfolioWith: { portfolio1. portfolio2 }.
	
	self assert: portfolio
		hasRegistered: { transaction1. transaction2. transaction3. transaction4 }! !

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 20:14:31'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 20:14:31'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 20:14:31'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:14:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 20:14:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:14:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:14:31'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 20:14:31'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 20:14:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 20:14:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 20:14:31'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 20:14:31'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 20:14:31'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 20:14:31'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 20:14:31'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 20:14:31'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 20:14:31'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 20:14:31'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 20:14:31'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 20:14:31'!
PASSED!
!PortfolioTest methodsFor: 'tests - balance' stamp: 'JPF 5/23/2021 20:14:52' prior: 50882674!
test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100
	
	| portfolio |
	
	portfolio _ self portfolioWith: { self portfolioWithBalance50. self portfolioWithBalance50 }.

	self assert: 100 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'JPF 5/23/2021 20:15:01' prior: 50882632!
test03PortfolioWithTwoAccountsWithBalance50HasBalance100
	
	| portfolio |
	
	portfolio _ self portfolioWith: { self accountWithBalance50. self accountWithBalance50 }.
	
	self assert: 100 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'JPF 5/23/2021 20:15:06' prior: 50882642!
test04PortfolioWithOnePortfolioWithBalance50HasBalance50
	
	| portfolio |
	
	portfolio _ self portfolioWith: { self portfolioWithBalance50 }.
	
	self assert: 50 equals: portfolio balance.! !
!PortfolioTest methodsFor: 'tests - balance' stamp: 'JPF 5/23/2021 20:15:14' prior: 50882688!
test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100
	
	| portfolio |
	
	portfolio _ self portfolioWith: { self portfolioWithBalance50. self accountWithBalance50 }.
	
	self assert: 100 equals: portfolio balance.! !

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 20:15:24'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 20:15:27'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 20:15:27'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:15:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 20:15:27'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:15:27'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:15:27'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 20:15:27'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 20:15:27'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 20:15:27'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 20:15:27'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 20:15:27'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 20:15:27'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 20:15:27'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 20:15:27'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 20:15:27'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 20:15:27'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 20:15:27'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 20:15:27'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 20:15:27'!
PASSED!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 20:16:47' prior: 50880356!
test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio

	| portfolio portfolio2 account|
	
	"portfolio _ Portfolio new."
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: { account }.
	"portfolio addAccountable: portfolio2."
	portfolio _ self portfolioWith: { portfolio2 }.
	
	self 
		should: [ portfolio addAccountable: account ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: account) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 20:16:50'!
PASSED!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 20:17:01' prior: 50883404!
test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio

	| portfolio portfolio2 account|
	
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: { account }.
	portfolio _ self portfolioWith: { portfolio2 }.
	
	self 
		should: [ portfolio addAccountable: account ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: account) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 20:17:34' prior: 50880427!
test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount
	| portfolio portfolio2 account|
	
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: { account }.
	portfolio _ self portfolioWith: { account }.
	
	self 
		should: [ portfolio addAccountable: portfolio2. ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: portfolio2) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 20:17:37'!
PASSED!
!Portfolio methodsFor: 'transactions' stamp: 'JPF 5/23/2021 20:19:09' prior: 50876454 overrides: 50875997!
transactions

	^ accountables inject: OrderedCollection new
		into: [ :transactions :accountable |
			accountable addTransactionsTo: transactions.
			transactions ]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 20:19:11'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 20:19:11'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:19:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 20:19:11'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:19:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:19:11'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 20:19:11'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 20:19:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 20:19:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 20:19:11'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 20:19:11'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 20:19:11'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 20:19:11'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 20:19:11'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 20:19:11'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 20:19:11'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 20:19:11'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 20:19:11'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 20:19:11'!
PASSED!

----SNAPSHOT----(23 May 2021 20:19:19) Portfolio.image priorSource: 17565559!
!Accountable methodsFor: 'visitor' stamp: 'JPF 5/23/2021 20:34:00'!
accept: aVisitor
	
	self subclassResponsibility! !
!Portfolio methodsFor: 'visitor' stamp: 'JPF 5/23/2021 20:34:11' prior: 50881045 overrides: 50883562!
accept: aVisitor
	
	aVisitor visitPortfolio: self.! !
!ReceptiveAccount methodsFor: 'visitor' stamp: 'JPF 5/23/2021 20:34:28' prior: 50881022 overrides: 50883562!
accept: aVisitor
	
	aVisitor visitAccount: self.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 20:34:31'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 20:34:31'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:34:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 20:34:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:34:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:34:31'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 20:34:31'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 20:34:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 20:34:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 20:34:31'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 20:34:31'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 20:34:31'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 20:34:31'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 20:34:31'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 20:34:31'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 20:34:31'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 20:34:31'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 20:34:31'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 20:34:31'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 20:34:35'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 20:34:35'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:34:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 20:34:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:34:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:34:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 20:34:35'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 20:34:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 20:34:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 20:34:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 20:34:35'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 20:34:35'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 20:34:35'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 20:34:35'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 20:34:35'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 20:34:35'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 20:34:35'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 20:34:35'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 20:34:35'!
PASSED!
!Accountable methodsFor: 'father portfolios' stamp: 'JPF 5/23/2021 20:37:48'!
fatherPortfolios
	
	^ fatherPortfolios! !

!methodRemoval: Accountable #fathers stamp: 'JPF 5/23/2021 20:37:48'!
fathers
	
	^ fatherPortfolios!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 20:37:54'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 20:37:54'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:37:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 20:37:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:37:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:37:54'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 20:37:54'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 20:37:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 20:37:54'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 20:37:54'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 20:37:54'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 20:37:54'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 20:37:54'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 20:37:54'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 20:37:54'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 20:37:54'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 20:37:54'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 20:37:54'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 20:37:54'!
PASSED!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 20:42:41'!
test20ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios
	| portfolio fatherPorfolio1 fatherPorfolio2 |
	
	portfolio _ Portfolio new.
	fatherPorfolio1 _ self portfolioWith: { portfolio }.
	fatherPorfolio2 _ self portfolioWith: { portfolio }.
	
	self 
		should: [ portfolio addAccountable: portfolio. ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: portfolio) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!testRun: #PortfolioTest #test20ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/23/2021 20:43:04'!
PASSED!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 20:43:59' prior: 50880451!
test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount
	| porfolioRoot1 portfolioToAdd portfolio account|
	
	account _ self accountWithBalance50.
	portfolio _ Portfolio new.
	porfolioRoot1 _ self portfolioWith: { account. portfolio }.
	portfolioToAdd _ self portfolioWith: { account }.
	
	self 
		should: [ portfolio addAccountable: portfolioToAdd. ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: portfolioToAdd) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 20:44:14' prior: 50883847!
test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount
	| porfolioRoot1 porfolioRoot2 portfolioToAdd portfolio account|
	
	account _ self accountWithBalance50.
	portfolio _ Portfolio new.
	porfolioRoot1 _ self portfolioWith: { account. portfolio }.
	portfolioToAdd _ self portfolioWith: { account }.
	
	self 
		should: [ portfolio addAccountable: portfolioToAdd. ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: portfolioToAdd) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 20:44:26' prior: 50883869!
test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount
	| porfolioRoot1 porfolioRoot2 portfolioToAdd portfolio account|
	
	account _ self accountWithBalance50.
	portfolio _ Portfolio new.
	porfolioRoot1 _ self portfolioWith: { account. portfolio }.
	porfolioRoot2 _ self portfolioWith: { account. portfolio }.
	portfolioToAdd _ self portfolioWith: { account }.
	
	self 
		should: [ portfolio addAccountable: portfolioToAdd. ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: portfolioToAdd) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 20:45:02' prior: 50883891!
test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount
	| porfolioRoot1 porfolioRoot2 portfolioToAdd portfolio account|
	
	account _ self accountWithBalance50.
	portfolio _ Portfolio new.
	porfolioRoot1 _ self portfolioWith: { account. portfolio }.
	porfolioRoot2 _ self portfolioWith: { portfolio }.
	portfolioToAdd _ self portfolioWith: { account }.
	
	self 
		should: [ portfolio addAccountable: portfolioToAdd. ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: portfolioToAdd) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 20:45:09'!
PASSED!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 20:45:51'!
test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios
	| portfolio fatherPorfolio1 fatherPorfolio2 |
	
	portfolio _ Portfolio new.
	fatherPorfolio1 _ self portfolioWith: { portfolio }.
	fatherPorfolio2 _ self portfolioWith: { portfolio }.
	
	self 
		should: [ portfolio addAccountable: portfolio. ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: portfolio) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	! !

!methodRemoval: PortfolioTest #test20ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/23/2021 20:45:52'!
test20ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios
	| portfolio fatherPorfolio1 fatherPorfolio2 |
	
	portfolio _ Portfolio new.
	fatherPorfolio1 _ self portfolioWith: { portfolio }.
	fatherPorfolio2 _ self portfolioWith: { portfolio }.
	
	self 
		should: [ portfolio addAccountable: portfolio. ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: portfolio) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	!

!methodRemoval: PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItself stamp: 'JPF 5/23/2021 20:45:58'!
test19ShouldFailWhenAddingAnEmptyPortfolioToItself
	| portfolio |
	
	portfolio _ Portfolio new.
	
	self 
		should: [ portfolio addAccountable: portfolio. ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: portfolio) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.

	
	!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/23/2021 20:46:02'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 20:46:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 20:46:05'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:46:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 20:46:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:46:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:46:05'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 20:46:05'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 20:46:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 20:46:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 20:46:05'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 20:46:05'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 20:46:05'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 20:46:05'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 20:46:05'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 20:46:05'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 20:46:05'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 20:46:05'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 20:46:05'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/23/2021 20:46:05'!
PASSED!
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 20:48:28' prior: 50882498!
addAccountable: anAccountable
	
	| rootPortfolios |
	
	rootPortfolios _ self rootPortfolios.
	
	accountables add: anAccountable.
	anAccountable addTo: self.
	
	(rootPortfolios anySatisfy: [ :rootPortfolio || visitor |
		visitor _ RepeatedAccountablesVisitor new.
		visitor hasRepeatedAccountables: rootPortfolio.
		]) ifTrue: [
			accountables remove: anAccountable.
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			anAccountable addTo: self.
		].! !
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 20:49:11'!
assert: rootPortfolios hasNotRepeatedAccountablesAfterAdding: anAccountable

	^ (rootPortfolios anySatisfy: [ :rootPortfolio || visitor |
		visitor _ RepeatedAccountablesVisitor new.
		visitor hasRepeatedAccountables: rootPortfolio.
		]) ifTrue: [
			accountables remove: anAccountable.
			self error: self class cantHaveRepeatedAccountsErrorDescription.
		] ifFalse: [
			anAccountable addTo: self.
		]! !
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 20:49:11' prior: 50884080!
addAccountable: anAccountable
	
	| rootPortfolios |
	
	rootPortfolios _ self rootPortfolios.
	
	accountables add: anAccountable.
	anAccountable addTo: self.
	
	self assert: rootPortfolios hasNotRepeatedAccountablesAfterAdding: anAccountable.! !
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 20:49:53' prior: 50884114!
addAccountable: anAccountable
	
	self assert: self rootPortfolios hasNotRepeatedAccountablesAfterAdding: anAccountable.
	
	accountables add: anAccountable.
	anAccountable addTo: self.! !
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 20:55:30' prior: 50884098!
assert: rootPortfolios hasNotRepeatedAccountablesAfterAdding: anAccountable

	| aRootPortfolioHasRepeatedAccountables |
	accountables add: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables _ 
	rootPortfolios anySatisfy: [ :rootPortfolio || visitor |
		visitor _ RepeatedAccountablesVisitor new.
		visitor hasRepeatedAccountables: rootPortfolio.
		].
	
	accountables remove: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables ifTrue: [
		self error: self class cantHaveRepeatedAccountsErrorDescription.
		].! !
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 20:55:33' prior: 50884134!
assert: rootPortfolios hasNotRepeatedAccountablesAfterAdding: anAccountable

	| aRootPortfolioHasRepeatedAccountables |
	
	accountables add: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables _ 
	rootPortfolios anySatisfy: [ :rootPortfolio || visitor |
		visitor _ RepeatedAccountablesVisitor new.
		visitor hasRepeatedAccountables: rootPortfolio.
		].
	
	accountables remove: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables ifTrue: [
		self error: self class cantHaveRepeatedAccountsErrorDescription.
		].! !
!Portfolio methodsFor: 'adding' stamp: 'JPF 5/23/2021 20:56:08'!
assert: rootPortfolios wontHaveRepeatedAccountablesAfterAdding: anAccountable

	| aRootPortfolioHasRepeatedAccountables |
	
	accountables add: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables _ 
	rootPortfolios anySatisfy: [ :rootPortfolio || visitor |
		visitor _ RepeatedAccountablesVisitor new.
		visitor hasRepeatedAccountables: rootPortfolio.
		].
	
	accountables remove: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables ifTrue: [
		self error: self class cantHaveRepeatedAccountsErrorDescription.
		].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 20:56:08' prior: 50884125!
addAccountable: anAccountable
	
	self assert: self rootPortfolios wontHaveRepeatedAccountablesAfterAdding: anAccountable.
	
	accountables add: anAccountable.
	anAccountable addTo: self.! !

!methodRemoval: Portfolio #assert:hasNotRepeatedAccountablesAfterAdding: stamp: 'JPF 5/23/2021 20:56:08'!
assert: rootPortfolios hasNotRepeatedAccountablesAfterAdding: anAccountable

	| aRootPortfolioHasRepeatedAccountables |
	
	accountables add: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables _ 
	rootPortfolios anySatisfy: [ :rootPortfolio || visitor |
		visitor _ RepeatedAccountablesVisitor new.
		visitor hasRepeatedAccountables: rootPortfolio.
		].
	
	accountables remove: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables ifTrue: [
		self error: self class cantHaveRepeatedAccountsErrorDescription.
		].!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 20:57:15'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 20:57:15'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:57:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 20:57:15'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:57:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 20:57:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 20:57:15'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 20:57:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 20:57:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 20:57:15'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 20:57:15'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 20:57:15'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 20:57:15'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 20:57:15'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 20:57:15'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 20:57:15'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 20:57:15'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 20:57:15'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/23/2021 20:57:15'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'JPF 5/23/2021 21:01:16'!
hasRepeatedAccountables: rootPortfolio

	| visitor |
		visitor _ RepeatedAccountablesVisitor new.
		visitor hasRepeatedAccountables: rootPortfolio! !
!Portfolio methodsFor: 'assertions' stamp: 'JPF 5/23/2021 21:01:16' prior: 50884172!
assert: rootPortfolios wontHaveRepeatedAccountablesAfterAdding: anAccountable

	| aRootPortfolioHasRepeatedAccountables |
	
	accountables add: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables _ 
	rootPortfolios anySatisfy: [ :rootPortfolio |self hasRepeatedAccountables: rootPortfolio.
		].
	
	accountables remove: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables ifTrue: [
		self error: self class cantHaveRepeatedAccountsErrorDescription.
		].! !
!Portfolio methodsFor: 'assertions' stamp: 'JPF 5/23/2021 21:02:22' prior: 50884300!
hasRepeatedAccountables: rootPortfolio

	| visitor |
		visitor _ RepeatedAccountablesVisitor new.
		visitor hasRepeatedAccountables: self.! !
!Portfolio methodsFor: 'assertions' stamp: 'JPF 5/23/2021 21:02:35' prior: 50884326!
hasRepeatedAccountables: rootPortfolio

	| visitor |
	
	visitor _ RepeatedAccountablesVisitor new.
	^ visitor hasRepeatedAccountables: self.! !
!Portfolio methodsFor: 'assertions' stamp: 'JPF 5/23/2021 21:02:41' prior: 50884334!
hasRepeatedAccountables: rootPortfolio

	| visitor |
	
	visitor _ RepeatedAccountablesVisitor new.
	^ visitor hasRepeatedAccountables: self! !
!Portfolio methodsFor: 'assertions' stamp: 'JPF 5/23/2021 21:03:12'!
hasRepeatedAccountables

	| visitor |
	
	visitor _ RepeatedAccountablesVisitor new.
	^ visitor hasRepeatedAccountables: self! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 21:03:12' prior: 50884342!
hasRepeatedAccountables: rootPortfolio

	| visitor |
	
	visitor _ RepeatedAccountablesVisitor new.
	^ visitor hasRepeatedAccountables! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 21:03:12' prior: 50884308!
assert: rootPortfolios wontHaveRepeatedAccountablesAfterAdding: anAccountable

	| aRootPortfolioHasRepeatedAccountables |
	
	accountables add: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables _ 
	rootPortfolios anySatisfy: [ :rootPortfolio |self hasRepeatedAccountables.
		].
	
	accountables remove: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables ifTrue: [
		self error: self class cantHaveRepeatedAccountsErrorDescription.
		].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 21:03:12' prior: 50884349!
hasRepeatedAccountables

	| visitor |
	
	visitor _ RepeatedAccountablesVisitor new.
	^ visitor hasRepeatedAccountables! !

!methodRemoval: Portfolio #hasRepeatedAccountables: stamp: 'JPF 5/23/2021 21:03:12'!
hasRepeatedAccountables: rootPortfolio

	| visitor |
	
	visitor _ RepeatedAccountablesVisitor new.
	^ visitor hasRepeatedAccountables!
!Portfolio methodsFor: 'assertions' stamp: 'JPF 5/23/2021 21:03:56' prior: 50884364!
assert: rootPortfolios wontHaveRepeatedAccountablesAfterAdding: anAccountable

	| aRootPortfolioHasRepeatedAccountables |
	
	accountables add: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables _ 
	rootPortfolios anySatisfy: [ :rootPortfolio | rootPortfolio hasRepeatedAccountables. ].
	
	accountables remove: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables ifTrue: [
		self error: self class cantHaveRepeatedAccountsErrorDescription.
		].! !
!Portfolio methodsFor: 'assertions' stamp: 'JPF 5/23/2021 21:03:58' prior: 50884395!
assert: rootPortfolios wontHaveRepeatedAccountablesAfterAdding: anAccountable

	| aRootPortfolioHasRepeatedAccountables |
	
	accountables add: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables _ 
	rootPortfolios anySatisfy: [ :rootPortfolio | rootPortfolio hasRepeatedAccountables ].
	
	accountables remove: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables ifTrue: [
		self error: self class cantHaveRepeatedAccountsErrorDescription.
		].! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 21:04:56'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:04:56'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:04:56'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:04:56'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:04:56'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:04:56'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 21:04:56'!
ERROR!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 21:04:56'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 21:04:56'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 21:04:56'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 21:04:56'!
ERROR!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 21:04:56'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 21:04:56'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 21:04:56'!
ERROR!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 21:04:56'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 21:04:56'!
ERROR!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 21:04:56'!
ERROR!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 21:04:56'!
ERROR!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/23/2021 21:04:56'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:05:01'!
ERROR!
!Portfolio methodsFor: 'accountables' stamp: 'JPF 5/23/2021 21:05:58' prior: 50884381!
hasRepeatedAccountables

	| visitor |
	
	visitor _ RepeatedAccountablesVisitor new.
	^ visitor hasRepeatedAccountables: self! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 21:06:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:06:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:06:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:06:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:06:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:06:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 21:06:02'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 21:06:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 21:06:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 21:06:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 21:06:02'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 21:06:02'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 21:06:02'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 21:06:02'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 21:06:02'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 21:06:02'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 21:06:02'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 21:06:02'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/23/2021 21:06:02'!
PASSED!

----SNAPSHOT----(23 May 2021 21:08:12) Portfolio.image priorSource: 17661082!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 21:08:16'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:08:16'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:08:16'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:08:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:08:16'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:08:16'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 21:08:16'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 21:08:16'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 21:08:16'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 21:08:16'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 21:08:16'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 21:08:16'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 21:08:16'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 21:08:16'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 21:08:16'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 21:08:16'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 21:08:16'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 21:08:16'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/23/2021 21:08:16'!
PASSED!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 21:12:31' prior: 50880321!
test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio
	
	| portfolio account|
	
	account _ self accountWithBalance50.
	portfolio _ self portfolioWith: { account }.
	
	self 
		should: [ portfolio addAccountable: account ]
		raise: Error
		withExceptionDo: [ :error | self assert: 1 equals: portfolio accountables size ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.
	
	! !

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 21:12:37'!
PASSED!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 21:15:01'!
assertCantAdd: anAccountable to: aPortfolio
	
	self 
		should: [ aPortfolio addAccountable: anAccountable ]
		raise: Error
		withExceptionDo: [ :error | self assert: 1 equals: aPortfolio accountables size ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.
	
	! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 21:16:18' prior: 50884702!
assertCantAdd: anAccountable to: aPortfolio
	
	self 
		should: [ aPortfolio addAccountable: anAccountable ]
		raise: Error
		withExceptionDo: [ :error | self deny: (aPortfolio accountables includes: anAccountable) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription.
	
	! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 21:18:08' prior: 50883429!
test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio

	| portfolio portfolio2 account|
	
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: { account }.
	portfolio _ self portfolioWith: { portfolio2 }.
	
	self assertCantAdd: account to: portfolio.
		"should: [ portfolio addAccountable: account ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: account) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription."

	
	! !

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 21:18:10'!
PASSED!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 21:18:42' prior: 50883448!
test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount
	| portfolio portfolio2 account|
	
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: { account }.
	portfolio _ self portfolioWith: { account }.
	
	self assertCantAdd: portfolio2 to: portfolio
		"should: [ portfolio addAccountable: portfolio2. ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: portfolio2) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription."

	
	! !

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 21:18:47'!
PASSED!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 21:19:35' prior: 50883915!
test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount
	| porfolioRoot1 porfolioRoot2 portfolioToAdd portfolio account|
	
	account _ self accountWithBalance50.
	portfolio _ Portfolio new.
	porfolioRoot1 _ self portfolioWith: { account. portfolio }.
	porfolioRoot2 _ self portfolioWith: { portfolio }.
	portfolioToAdd _ self portfolioWith: { account }.
	
	self assertCantAdd: portfolioToAdd to: portfolio.
		"should: [ portfolio addAccountable: portfolioToAdd. ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: portfolioToAdd) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription."

	
	! !

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 21:19:40'!
PASSED!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 21:20:13' prior: 50883943!
test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios
	| portfolio fatherPorfolio1 fatherPorfolio2 |
	
	portfolio _ Portfolio new.
	fatherPorfolio1 _ self portfolioWith: { portfolio }.
	fatherPorfolio2 _ self portfolioWith: { portfolio }.
	
	self assertCantAdd: portfolio to: portfolio
		"should: [ portfolio addAccountable: portfolio. ]
		raise: Error
		withExceptionDo: [ :error | self deny: (portfolio accountables includes: portfolio) ]
		description: Portfolio cantHaveRepeatedAccountsErrorDescription."

	
	! !

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/23/2021 21:20:18'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 21:20:18'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:20:18'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:20:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:20:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:20:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:20:18'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 21:20:18'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 21:20:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 21:20:18'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 21:20:18'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 21:20:18'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 21:20:18'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 21:20:18'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 21:20:18'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 21:20:18'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 21:20:18'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 21:20:18'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 21:20:18'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/23/2021 21:20:18'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 21:20:20'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:20:20'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:20:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:20:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:20:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:20:20'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 21:20:20'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 21:20:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 21:20:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 21:20:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 21:20:20'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 21:20:20'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 21:20:20'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 21:20:20'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 21:20:20'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 21:20:20'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 21:20:20'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 21:20:20'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/23/2021 21:20:20'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 21:20:29'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:20:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:20:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:20:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:20:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:20:29'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 21:20:29'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 21:20:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 21:20:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 21:20:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 21:20:29'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 21:20:29'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 21:20:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 21:20:29'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 21:20:29'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 21:20:29'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 21:20:29'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 21:20:29'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/23/2021 21:20:29'!
PASSED!
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 21:21:24' prior: 50884726!
test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio

	| portfolio portfolio2 account|
	
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: { account }.
	portfolio _ self portfolioWith: { portfolio2 }.
	
	self assertCantAdd: account to: portfolio! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 21:21:31' prior: 50884750!
test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount
	| portfolio portfolio2 account|
	
	account _ self accountWithBalance50.
	portfolio2 _ self portfolioWith: { account }.
	portfolio _ self portfolioWith: { account }.
	
	self assertCantAdd: portfolio2 to: portfolio! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 21:21:40' prior: 50884775!
test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount
	| porfolioRoot1 porfolioRoot2 portfolioToAdd portfolio account|
	
	account _ self accountWithBalance50.
	portfolio _ Portfolio new.
	porfolioRoot1 _ self portfolioWith: { account. portfolio }.
	porfolioRoot2 _ self portfolioWith: { portfolio }.
	portfolioToAdd _ self portfolioWith: { account }.
	
	self assertCantAdd: portfolioToAdd to: portfolio! !
!PortfolioTest methodsFor: 'tests - adding' stamp: 'JPF 5/23/2021 21:22:46' prior: 50884805!
test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios
	| portfolio fatherPorfolio1 fatherPorfolio2 |
	
	portfolio _ Portfolio new.
	fatherPorfolio1 _ self portfolioWith: { portfolio }.
	fatherPorfolio2 _ self portfolioWith: { portfolio }.
	
	self assertCantAdd: portfolio to: portfolio

	
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 21:23:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:23:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:23:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:23:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:23:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:23:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 21:23:02'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 21:23:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 21:23:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 21:23:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 21:23:02'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 21:23:02'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 21:23:02'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 21:23:02'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 21:23:02'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 21:23:02'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 21:23:02'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 21:23:02'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/23/2021 21:23:02'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JPF 5/23/2021 21:24:10'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JPF 5/23/2021 21:25:00'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'JPF 5/23/2021 21:25:51' prior: 50884412!
assert: rootPortfolios wontHaveRepeatedAccountablesAfterAdding: anAccountable

	| aRootPortfolioHasRepeatedAccountables |
	
	accountables add: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables _ 
		rootPortfolios anySatisfy: [ :rootPortfolio | rootPortfolio hasRepeatedAccountables ].
	
	accountables remove: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables ifTrue: [
		self error: self class cantHaveRepeatedAccountsErrorDescription.
		].! !
!Portfolio methodsFor: 'assertions' stamp: 'JPF 5/23/2021 21:26:20' prior: 50885421!
assert: rootPortfolios wontHaveRepeatedAccountablesAfterAdding: anAccountable

	| aRootPortfolioHasRepeatedAccountables |
	
	accountables add: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables _ 
		rootPortfolios anySatisfy: [ :rootPortfolio | rootPortfolio hasRepeatedAccountables ].
	
	accountables remove: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables ifTrue: [
		self error: self class cantHaveRepeatedAccountsErrorDescription.
		]! !
!Portfolio class methodsFor: 'error descriptions' stamp: 'JPF 5/23/2021 21:26:55'!
cantHaveRepeatedAccountablesErrorDescription

	^ 'a portfolio can not have reapeted accounts'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 21:26:55' prior: 50885438!
assert: rootPortfolios wontHaveRepeatedAccountablesAfterAdding: anAccountable

	| aRootPortfolioHasRepeatedAccountables |
	
	accountables add: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables _ 
		rootPortfolios anySatisfy: [ :rootPortfolio | rootPortfolio hasRepeatedAccountables ].
	
	accountables remove: anAccountable.
	
	aRootPortfolioHasRepeatedAccountables ifTrue: [
		self error: self class cantHaveRepeatedAccountablesErrorDescription.
		]! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 21:26:55' prior: 50884714!
assertCantAdd: anAccountable to: aPortfolio
	
	self 
		should: [ aPortfolio addAccountable: anAccountable ]
		raise: Error
		withExceptionDo: [ :error | self deny: (aPortfolio accountables includes: anAccountable) ]
		description: Portfolio cantHaveRepeatedAccountablesErrorDescription.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'JPF 5/23/2021 21:26:55' prior: 50884683!
test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio
	
	| portfolio account|
	
	account _ self accountWithBalance50.
	portfolio _ self portfolioWith: { account }.
	
	self 
		should: [ portfolio addAccountable: account ]
		raise: Error
		withExceptionDo: [ :error | self assert: 1 equals: portfolio accountables size ]
		description: Portfolio cantHaveRepeatedAccountablesErrorDescription.
	
	! !

!methodRemoval: Portfolio class #cantHaveRepeatedAccountsErrorDescription stamp: 'JPF 5/23/2021 21:26:55'!
cantHaveRepeatedAccountsErrorDescription

	^ 'a portfolio can not have reapeted accounts'!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/23/2021 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/23/2021 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/23/2021 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/23/2021 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/23/2021 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/23/2021 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/23/2021 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/23/2021 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/23/2021 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/23/2021 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/23/2021 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/23/2021 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/23/2021 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/23/2021 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/23/2021 21:27:12'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/23/2021 21:27:12'!
PASSED!

----QUIT----(23 May 2021 23:10:34) Portfolio.image priorSource: 17694374!

----STARTUP---- (25 May 2021 09:25:30) as /home/juan/Apps/CuisUniversity/linux64/Portfolio.image!


!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/25/2021 09:25:40'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 09:25:40'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:25:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 09:25:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:25:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:25:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/25/2021 09:25:40'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/25/2021 09:25:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/25/2021 09:25:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/25/2021 09:25:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/25/2021 09:25:40'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/25/2021 09:25:40'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/25/2021 09:25:40'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/25/2021 09:25:40'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/25/2021 09:25:40'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/25/2021 09:25:40'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/25/2021 09:25:40'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/25/2021 09:25:40'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/25/2021 09:25:40'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'JPF 5/25/2021 09:32:00'!
havingTemporary: anAccountable do: aBlock

	accountables add: anAccountable.
	
	aBlock value
	
	accountables remove: anAccountable.! !
!Portfolio methodsFor: 'assertions' stamp: 'JPF 5/25/2021 09:35:21' prior: 50885679!
havingTemporary: anAccountable do: aBlock

	accountables add: anAccountable.
	aBlock ensure: [ accountables remove: anAccountable ]! !
!Portfolio methodsFor: 'assertions' stamp: 'JPF 5/25/2021 09:37:02' prior: 50885461!
assert: rootPortfolios wontHaveRepeatedAccountablesAfterAdding: anAccountable

	| aRootPortfolioHasRepeatedAccountables |
	
	self havingTemporary: anAccountable do: [
		aRootPortfolioHasRepeatedAccountables _ 
			rootPortfolios anySatisfy: [ :rootPortfolio | rootPortfolio hasRepeatedAccountables ].
		].
	
	aRootPortfolioHasRepeatedAccountables ifTrue: [
		self error: self class cantHaveRepeatedAccountablesErrorDescription.
		]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/25/2021 09:37:13'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 09:37:13'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:37:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 09:37:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:37:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:37:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/25/2021 09:37:13'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/25/2021 09:37:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/25/2021 09:37:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/25/2021 09:37:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/25/2021 09:37:13'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/25/2021 09:37:13'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/25/2021 09:37:13'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/25/2021 09:37:13'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/25/2021 09:37:13'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/25/2021 09:37:13'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/25/2021 09:37:13'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/25/2021 09:37:13'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/25/2021 09:37:13'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/25/2021 09:38:57'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 09:38:57'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:38:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 09:38:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:38:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:38:57'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/25/2021 09:38:57'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/25/2021 09:38:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/25/2021 09:38:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/25/2021 09:38:57'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/25/2021 09:38:57'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/25/2021 09:38:57'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/25/2021 09:38:57'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/25/2021 09:38:57'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/25/2021 09:38:57'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/25/2021 09:38:57'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/25/2021 09:38:57'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/25/2021 09:38:57'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/25/2021 09:38:57'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JPF 5/25/2021 09:39:04'!
PASSED!
!Portfolio methodsFor: 'assertions' stamp: 'JPF 5/25/2021 09:41:56'!
assertRootPortfoliosWontHaveRepeatedAccountablesAfterAdding: anAccountable

	| aRootPortfolioHasRepeatedAccountables |
	
	self havingTemporary: anAccountable do: [
		aRootPortfolioHasRepeatedAccountables _ 
			self rootPortfolios anySatisfy: [ :rootPortfolio | rootPortfolio hasRepeatedAccountables ].
		].
	
	aRootPortfolioHasRepeatedAccountables ifTrue: [
		self error: self class cantHaveRepeatedAccountablesErrorDescription.
		]! !
!Portfolio methodsFor: 'accountables' stamp: 'JPF 5/25/2021 09:42:26' prior: 50884192!
addAccountable: anAccountable
	
	self assertRootPortfoliosWontHaveRepeatedAccountablesAfterAdding: anAccountable.
	
	accountables add: anAccountable.
	anAccountable addTo: self.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/25/2021 09:42:34'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 09:42:34'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:42:34'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 09:42:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:42:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:42:34'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/25/2021 09:42:34'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/25/2021 09:42:34'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/25/2021 09:42:34'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/25/2021 09:42:34'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/25/2021 09:42:34'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/25/2021 09:42:34'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/25/2021 09:42:34'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/25/2021 09:42:34'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/25/2021 09:42:34'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/25/2021 09:42:34'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/25/2021 09:42:34'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/25/2021 09:42:34'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/25/2021 09:42:34'!
PASSED!

!methodRemoval: Portfolio #assert:wontHaveRepeatedAccountablesAfterAdding: stamp: 'JPF 5/25/2021 09:44:28'!
assert: rootPortfolios wontHaveRepeatedAccountablesAfterAdding: anAccountable

	| aRootPortfolioHasRepeatedAccountables |
	
	self havingTemporary: anAccountable do: [
		aRootPortfolioHasRepeatedAccountables _ 
			rootPortfolios anySatisfy: [ :rootPortfolio | rootPortfolio hasRepeatedAccountables ].
		].
	
	aRootPortfolioHasRepeatedAccountables ifTrue: [
		self error: self class cantHaveRepeatedAccountablesErrorDescription.
		]!
!Portfolio methodsFor: 'assertions' stamp: 'JPF 5/25/2021 09:47:21'!
anyRootPortfolioHasRepeatedAccountables

	^ self rootPortfolios anySatisfy: [ :rootPortfolio | rootPortfolio hasRepeatedAccountables ]! !
!Portfolio methodsFor: 'assertions' stamp: 'JPF 5/25/2021 09:47:21' prior: 50885976!
assertRootPortfoliosWontHaveRepeatedAccountablesAfterAdding: anAccountable

	| aRootPortfolioHasRepeatedAccountables |
	
	self havingTemporary: anAccountable do: [
		aRootPortfolioHasRepeatedAccountables _ 
			self anyRootPortfolioHasRepeatedAccountables.
		].
	
	aRootPortfolioHasRepeatedAccountables ifTrue: [
		self error: self class cantHaveRepeatedAccountablesErrorDescription.
		]! !
!Portfolio methodsFor: 'assertions' stamp: 'JPF 5/25/2021 09:47:52' prior: 50886105!
assertRootPortfoliosWontHaveRepeatedAccountablesAfterAdding: anAccountable

	| aRootPortfolioHasRepeatedAccountables |
	
	self havingTemporary: anAccountable do: [ 
		aRootPortfolioHasRepeatedAccountables _			self anyRootPortfolioHasRepeatedAccountables.
		].
	
	aRootPortfolioHasRepeatedAccountables ifTrue: [
		self error: self class cantHaveRepeatedAccountablesErrorDescription.
		]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/25/2021 09:48:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 09:48:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:48:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 09:48:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:48:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:48:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/25/2021 09:48:02'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/25/2021 09:48:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/25/2021 09:48:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/25/2021 09:48:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/25/2021 09:48:02'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/25/2021 09:48:02'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/25/2021 09:48:02'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/25/2021 09:48:02'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/25/2021 09:48:02'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/25/2021 09:48:02'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/25/2021 09:48:02'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/25/2021 09:48:02'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/25/2021 09:48:02'!
PASSED!
!Accountable methodsFor: 'father portfolios' stamp: 'JPF 5/25/2021 09:53:32' prior: 50882457!
rootPortfolios

	| rootPortfolios |
	
	rootPortfolios _ OrderedCollection new.
	
	fatherPortfolios 
		ifEmpty: [ rootPortfolios add: self ] 
		ifNotEmpty: [ fatherPortfolios do: [ :fatherPortfolio |
			rootPortfolios addAll: fatherPortfolio rootPortfolios.
		]].

	^ rootPortfolios
	
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/25/2021 09:53:34'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 09:53:34'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:53:34'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 09:53:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:53:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 09:53:34'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/25/2021 09:53:34'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/25/2021 09:53:34'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/25/2021 09:53:34'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/25/2021 09:53:34'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/25/2021 09:53:34'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/25/2021 09:53:34'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/25/2021 09:53:34'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/25/2021 09:53:34'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/25/2021 09:53:34'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/25/2021 09:53:34'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/25/2021 09:53:34'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/25/2021 09:53:34'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/25/2021 09:53:34'!
PASSED!

nil isNil!

nil isNil isNil !

nil isNil isNil ifFalse: [true]!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/25/2021 10:04:39'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 10:04:39'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 10:04:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 10:04:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 10:04:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 10:04:39'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/25/2021 10:04:39'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/25/2021 10:04:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/25/2021 10:04:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/25/2021 10:04:39'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/25/2021 10:04:39'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/25/2021 10:04:39'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/25/2021 10:04:39'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/25/2021 10:04:39'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/25/2021 10:04:39'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/25/2021 10:04:39'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/25/2021 10:04:39'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/25/2021 10:04:39'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/25/2021 10:04:39'!
PASSED!
!Accountable methodsFor: 'father portfolios' stamp: 'JPF 5/25/2021 10:10:22' prior: 50886216!
rootPortfolios

	| rootPortfolios |
	
	rootPortfolios _ OrderedCollection new.
	
	fatherPortfolios 
		ifEmpty: [ ^ OrderedCollection with: self ] 
		ifNotEmpty: [ fatherPortfolios do: [ :fatherPortfolio |
			rootPortfolios addAll: fatherPortfolio rootPortfolios.
		]].

	^ rootPortfolios
	
	! !
!Accountable methodsFor: 'father portfolios' stamp: 'JPF 5/25/2021 10:11:33' prior: 50886391!
rootPortfolios

	fatherPortfolios 
		ifEmpty: [ ^ OrderedCollection with: self ] 
		ifNotEmpty: [ fatherPortfolios inject: OrderedCollection new into: [ :rootPortfolios :fatherPortfolio |
			rootPortfolios addAll: fatherPortfolio rootPortfolios.
			rootPortfolios.
		]]
	
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/25/2021 10:11:44'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 10:11:44'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 10:11:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 10:11:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 10:11:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 10:11:44'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/25/2021 10:11:44'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/25/2021 10:11:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/25/2021 10:11:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/25/2021 10:11:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/25/2021 10:11:44'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/25/2021 10:11:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/25/2021 10:11:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/25/2021 10:11:44'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/25/2021 10:11:44'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/25/2021 10:11:44'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/25/2021 10:11:44'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/25/2021 10:11:44'!
FAILURE!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/25/2021 10:11:44'!
FAILURE!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/25/2021 10:11:59'!
FAILURE!
!Accountable methodsFor: 'father portfolios' stamp: 'JPF 5/25/2021 10:12:28' prior: 50886404!
rootPortfolios

	fatherPortfolios 
		ifEmpty: [ ^ OrderedCollection with: self ] 
		ifNotEmpty: [ ^ fatherPortfolios inject: OrderedCollection new into: [ :rootPortfolios :fatherPortfolio |
			rootPortfolios addAll: fatherPortfolio rootPortfolios.
			rootPortfolios.
		]]
	
	! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/25/2021 10:12:35'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 10:12:35'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 10:12:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 10:12:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 10:12:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 10:12:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/25/2021 10:12:35'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/25/2021 10:12:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/25/2021 10:12:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/25/2021 10:12:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/25/2021 10:12:35'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/25/2021 10:12:35'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/25/2021 10:12:35'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/25/2021 10:12:35'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/25/2021 10:12:35'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/25/2021 10:12:35'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/25/2021 10:12:35'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/25/2021 10:12:35'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/25/2021 10:12:35'!
PASSED!
!Portfolio methodsFor: 'accountables' stamp: 'JPF 5/25/2021 10:14:09' prior: 50884513!
hasRepeatedAccountables

	^ RepeatedAccountablesVisitor new hasRepeatedAccountables: self! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/25/2021 10:14:18'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 10:14:18'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 10:14:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 10:14:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 10:14:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 10:14:18'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/25/2021 10:14:18'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/25/2021 10:14:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/25/2021 10:14:18'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/25/2021 10:14:18'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/25/2021 10:14:18'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/25/2021 10:14:18'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/25/2021 10:14:18'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/25/2021 10:14:18'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/25/2021 10:14:18'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/25/2021 10:14:18'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/25/2021 10:14:18'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/25/2021 10:14:18'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/25/2021 10:14:18'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasBalance0 stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioWithOneAccountWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioWithTwoAccountsWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioWithOnePortfolioWithBalance50HasBalance50 stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioWithTwoPortfoliosWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioWithOnePortfolioAndOneAccountWithBalance50HasBalance100 stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioWithTwoPortfoliosAndTwoAccountsWithBalance50HasBalance200 stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #PortfolioTest #test08EmptyPortfolioHasNoTransactions stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioWithOneAccountWithOneTransactionHasOnlyThatTransaction stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioWithTwoAccountsWithOneTransactionHasOnlyThatTwoTransactions stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioWithTwoPortfoliosWithTwoTransactionsHasOnlyThatFourTransactions stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #PortfolioTest #test12EmptyPortfolioHasNotRegisteredAnyTransactions stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioWithOneAccountWithOneTransactionHasRegisteredThatTransaction stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioWithTwoPortfoliosWithTwoTransactionsHasRegisteredThatFourTransactions stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #PortfolioTest #test15ShouldFailWhenAddingTheSameAccountTwiceToAPortfolio stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #PortfolioTest #test16ShouldFailWhenAddingAnAccountToPortfolioThatIsAlreadyInsideAChildPortfolio stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #PortfolioTest #test17ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasTheSameAccount stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #PortfolioTest #test18ShouldFailWhenAddingAPortfolioWithAnAccountToAPortfolioThatHasAFatherPortfolioWithTheSameAccount stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #PortfolioTest #test19ShouldFailWhenAddingAnEmptyPortfolioToItselfBeingInTwoPortfolios stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'JPF 5/25/2021 10:15:13'!
PASSED!

----SNAPSHOT----(25 May 2021 10:15:40) Portfolio.image priorSource: 17726174!